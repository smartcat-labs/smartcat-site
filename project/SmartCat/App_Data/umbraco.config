<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE root [ 
<!ELEMENT Blog ANY>
<!ATTLIST Blog id ID #REQUIRED>
<!ELEMENT BlogPost ANY>
<!ATTLIST BlogPost id ID #REQUIRED>
<!ELEMENT CertificateContainer ANY>
<!ATTLIST CertificateContainer id ID #REQUIRED>
<!ELEMENT CertificateItem ANY>
<!ATTLIST CertificateItem id ID #REQUIRED>
<!ELEMENT Contact ANY>
<!ATTLIST Contact id ID #REQUIRED>
<!ELEMENT Error404 ANY>
<!ATTLIST Error404 id ID #REQUIRED>
<!ELEMENT Footer ANY>
<!ATTLIST Footer id ID #REQUIRED>
<!ELEMENT Header ANY>
<!ATTLIST Header id ID #REQUIRED>
<!ELEMENT Home ANY>
<!ATTLIST Home id ID #REQUIRED>
<!ELEMENT Language ANY>
<!ATTLIST Language id ID #REQUIRED>
<!ELEMENT Main ANY>
<!ATTLIST Main id ID #REQUIRED>
<!ELEMENT News ANY>
<!ATTLIST News id ID #REQUIRED>
<!ELEMENT NewsPost ANY>
<!ATTLIST NewsPost id ID #REQUIRED>
<!ELEMENT Page ANY>
<!ATTLIST Page id ID #REQUIRED>
<!ELEMENT PartnerItem ANY>
<!ATTLIST PartnerItem id ID #REQUIRED>
<!ELEMENT PartnersContainer ANY>
<!ATTLIST PartnersContainer id ID #REQUIRED>
<!ELEMENT Process ANY>
<!ATTLIST Process id ID #REQUIRED>
<!ELEMENT ProcessItem ANY>
<!ATTLIST ProcessItem id ID #REQUIRED>
<!ELEMENT Repository ANY>
<!ATTLIST Repository id ID #REQUIRED>
<!ELEMENT Search ANY>
<!ATTLIST Search id ID #REQUIRED>
<!ELEMENT ServiceItem ANY>
<!ATTLIST ServiceItem id ID #REQUIRED>
<!ELEMENT Services ANY>
<!ATTLIST Services id ID #REQUIRED>
<!ELEMENT Settings ANY>
<!ATTLIST Settings id ID #REQUIRED>
<!ELEMENT Team ANY>
<!ATTLIST Team id ID #REQUIRED>
<!ELEMENT TeamMember ANY>
<!ATTLIST TeamMember id ID #REQUIRED>
<!ELEMENT Technologies ANY>
<!ATTLIST Technologies id ID #REQUIRED>
<!ELEMENT TechnologyItem ANY>
<!ATTLIST TechnologyItem id ID #REQUIRED>
<!ELEMENT TestimonialItem ANY>
<!ATTLIST TestimonialItem id ID #REQUIRED>
<!ELEMENT TestimonialContainer ANY>
<!ATTLIST TestimonialContainer id ID #REQUIRED>

]>
<root id="-1">
  <Language id="1255" parentID="-1" level="1" creatorID="0" sortOrder="0" createDate="2015-09-19T12:36:16" updateDate="2015-09-19T12:36:27" nodeName="en" urlName="en" path="-1,1255" isDoc="" nodeType="1254" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Language">
    <Home id="1057" parentID="1255" level="2" creatorID="0" sortOrder="1" createDate="2015-09-13T19:06:08" updateDate="2015-09-19T12:37:00" nodeName="Home" urlName="home" path="-1,1255,1057" isDoc="" nodeType="1056" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1058" nodeTypeAlias="Home">
      <umbracoNaviHide>0</umbracoNaviHide>
      <title><![CDATA[Home]]></title>
      <sliderImage>1226</sliderImage>
      <abstractImage>1227</abstractImage>
      <featuredText><![CDATA[<h1>We are your trusted <br /> <span class="white">Analytics</span> <span class="black">Partner</span></h1>
<p>We are here to empower you with new insights derived from Big Data.<br /> We believe in striving for perfection. We believe in evolution. <br /><br /> This is not our job. This is our lives. <br /> Knowledge is our thirst and dedication our lifestyle.</p>]]></featuredText>
      <featuredButton><![CDATA[[
  {
    "id": "1063",
    "name": "Learn more",
    "url": "/services/",
    "target": "_parent",
    "icon": "icon-websitebuilder.png"
  }
]]]></featuredButton>
      <featuredServices><![CDATA[1081,1082,1083,1084]]></featuredServices>
      <aboutText><![CDATA[<p>We are a carefully selected team of industry seniors with highly set goals. We are here to deliver outstanding service and remarkable solutions. This is not our job. These are our lives. Knowledge is our thirst and dedication our lifestyle.</p>
<p>We want to make the world a better place through technological advances. We trust in facts, and making smart decisions using the same. We are here to empower decision makers with information, with knowledge. This is the age of information and we are your agents. There’s no better way to gain a new perspective than challenging the way things are. Challenge the present and you are participating in the creation of the future.</p>
<p>We are dedicated to excellence. A challenge is what makes us tick. Perfection is our goal. The pursuit of excellence is a neverending road, that will keep improving our services, our team and the world around us. We aim to impress, our lives are too short for anything less than that. Do it right or don’t do it at all. It’s a tough road that leads to the top of the mountain, but it’s the only thing that feels right, that truly fulfills us.</p>]]></aboutText>
      <linkButton><![CDATA[[
  {
    "id": "1087",
    "name": "Learn More",
    "url": "/team/",
    "target": "_parent",
    "icon": "icon-workshirt.png"
  }
]]]></linkButton>
      <featuredProcesses><![CDATA[1171,1173,1175,1177]]></featuredProcesses>
      <featuredMembers><![CDATA[1092,1095,1098,1100,1102,1104]]></featuredMembers>
      <testimonialTitle><![CDATA[Behold the power of Big Data]]></testimonialTitle>
      <testimonials><![CDATA[1235,1236,1237,1238,1239,1240,1241]]></testimonials>
      <partnerNetwork><![CDATA[1247,1249]]></partnerNetwork>
      <partnersTitle><![CDATA[Partner network]]></partnersTitle>
      <Services id="1063" parentID="1057" level="3" creatorID="0" sortOrder="11" createDate="2015-09-14T21:33:00" updateDate="2015-09-19T12:37:00" nodeName="Services" urlName="services" path="-1,1255,1057,1063" isDoc="" nodeType="1062" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1064" nodeTypeAlias="Services">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[Services]]></title>
        <seoTitle><![CDATA[Services]]></seoTitle>
        <rteContent><![CDATA[<p>Professionalism. To the core. <br />Care. Till' the end of time...</p>
<p>Time. Time changes the world around us, constantly. Irreversibly. With each change, we have two options: adapt or live in the past. Embracing the change is what evolution is all about. It is a necessary survival skill. The faster you adapt, the greater is your advantage against competition.</p>
<p>In the past, businesses were run based on what you know and who you know. That is still true today, however the ways we gain our knowledge and create our contacts have become lightning fast thanks to advances in technology.</p>
<p>In this brave new world, the difference between professionals and amateurs boils down to the decision making process - experienced decision makers rely on their previous experiences and their "gut feeling", while today's professionals rely on facts. Real-time facts. In ever-faster changing world, our perspectives need to change with it in order to reach smarter insights that lead to smarter decisions. Careful and planned analysis of available data provides these insights and empowers the decision makers with agility necessary for the survival in the markets of tomorrow.</p>
<p>But we can even take you a step beyond… Outsmart the time. Take control. Bring on the changes and shape the future in your favor.</p>
<p>Connect the dots. Get the big picture. <br /> Don't be in the dark. Be in the know. Take control. The smart way.</p>]]></rteContent>
        <teamWidget><![CDATA[1092,1095,1098]]></teamWidget>
        <ServiceItem id="1081" parentID="1063" level="4" creatorID="0" sortOrder="4" createDate="2015-09-14T22:48:38" updateDate="2015-09-19T12:37:00" nodeName="Architecture" urlName="architecture" path="-1,1255,1057,1063,1081" isDoc="" nodeType="1080" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1079" nodeTypeAlias="ServiceItem">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Architecture]]></title>
          <serviceImage>1067</serviceImage>
          <serviceTitleImage>1068</serviceTitleImage>
          <rteContent><![CDATA[<p>This is the most comprehensive service of all. We must truly understand your business before we make any decisions. It all starts with an intake phase, where a workshop is held to help us understand your business and strategy. This knowledge then becomes the guiding light for all future decisions and suggestions. A solution design phase is where we get creative and use prototyping for the proof of concept, before the implementation starts.</p>
<p>We are far past the architecture where you had to choose a language and database and start your three layer monolithic application development. We live in a polyglot world where applications look like building blocks where you need to integrate a couple of technologies together to achieve the project goal. We believe in polyglot approach in order to choose the right technology for a specific use, pick appropriate data sources, define how data will be stored, analysed and integrated. If backend system needs to be cross platform done in language with great community support and frontend needs to be interactive, we will go with a combination of java/scala and angularJS, if some data comes from sensors, but we have a true relational account model we will go with a combination of cassandra and relational database of choice. Microservice architecture helps us a lot with this approach since it enables us to wrap different functionalities behind service and define API so we can easily maintain and change if needed. We are proud to say that we have production experience with distributed microservice architecture and we are well aware of potential problems so we are not forcing that architecture because it is hype, we are simply suggesting it where we recognise a need and could benefit from it.</p>]]></rteContent>
        </ServiceItem>
        <ServiceItem id="1082" parentID="1063" level="4" creatorID="0" sortOrder="5" createDate="2015-09-14T22:49:48" updateDate="2015-09-19T12:37:00" nodeName="Data storage" urlName="data-storage" path="-1,1255,1057,1063,1082" isDoc="" nodeType="1080" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1079" nodeTypeAlias="ServiceItem">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Data storage]]></title>
          <serviceImage>1070</serviceImage>
          <serviceTitleImage>1071</serviceTitleImage>
          <rteContent><![CDATA[<p>We are way past the time when you had to choose a data storage provider and put all data in it without worrying about use cases of specific data models. We are strong believers in polyglot persistence, within this level of service we will analyse your use cases and suggest the most appropriate data storage for the specific aspects of your application. We consider data modeling very important because doing it right will make the latter phases of analysis and prediction much easier. Data Storage for huge amounts of data brings along problems with volume, velocity and variety of the incoming data. In order to store information efficiently for fast writes and fast reads and scale right, storage must be fault tolerant and distributed with easy maintenance and deployment. Epic wars between the relational and non-relational world are behind the community, NoSQL vendors are mature enough and production proven. We have experience with the majority of vendors, both in NoSQL and relational world, and we make a choice based on use case.</p>
<p>Indexing engines are an addition to storage when you need to provide a wide variety of data queries. Distributed databases are built for speed and performance but their tradeoff is inability to support complicated relational queries with joins, group by etc. Indexing engines bring this functionality to the system. Indexed data is held in memory and complicated queries are served fast. We have experience with elasticsearch and solr.</p>]]></rteContent>
        </ServiceItem>
        <ServiceItem id="1083" parentID="1063" level="4" creatorID="0" sortOrder="6" createDate="2015-09-14T22:50:37" updateDate="2015-09-19T12:37:00" nodeName="Data processing" urlName="data-processing" path="-1,1255,1057,1063,1083" isDoc="" nodeType="1080" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1079" nodeTypeAlias="ServiceItem">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Data processing]]></title>
          <serviceImage>1073</serviceImage>
          <serviceTitleImage>1221</serviceTitleImage>
          <rteContent><![CDATA[<p>It is hard to think of an enterprise application these days without the need for integration, both internally among many small services and externally with public APIs or 3rd party services. With the emergence of IoT and public APIs this has become a common requirement. For successful integration, data needs to be processed and this needs to be done fast, fault tolerant, usually in async and non blocking matter (?).  You need to fill your application with a lot of data for release, attach to public API, convert data to your data model and you are ready to go. This goes for the other end of integration, exposing data to outside world, since this data can rarely be exposed without preprocessing first. We have experience with a huge variety of public APIs, protocols and tools for data processing (messaging systems, stream computing systems, batch processing tools and reactive technologies).</p>
<p>In order to leverage truly distributed systems you need to have a <strong>messaging system</strong> that enables implementing many microservices which communicate with each other through asynchronous non blocking messages (we have experience with kafka, rabbitmq, zeromq and mosquitto). Storing data alone is not enough, data usually needs to be processed before writing and reading. For this problem, we use <strong>stream computing systems</strong> which are able to process large amounts of data in parallel before the data is stored (we have experience with apache spark and apache storm). <strong>Batch processing</strong> is always needed when you work with big data, since some data sets are so large they cannot be processed in real-time. Data must be migrated from different data sources and this needs to be done in parallel and in background (we have experience with apache spark and spring batch for batch processing needs). In order to build a highly concurrent and distributed message-driven system with high throughput and low latency, we are using <strong>reactive technology</strong> (we have experience with akka).</p>]]></rteContent>
        </ServiceItem>
        <ServiceItem id="1084" parentID="1063" level="4" creatorID="0" sortOrder="7" createDate="2015-09-14T22:51:34" updateDate="2015-09-19T12:37:00" nodeName="Data analytics" urlName="data-analytics" path="-1,1255,1057,1063,1084" isDoc="" nodeType="1080" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1079" nodeTypeAlias="ServiceItem">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Data analytics]]></title>
          <serviceImage>1076</serviceImage>
          <serviceTitleImage>1077</serviceTitleImage>
          <rteContent><![CDATA[<p>Probably the most valuable service since it can directly influence the business with new insights.  This is where our team of business analysts and business intelligence experts turns data into insights by utilizing graphical representation and analysis techniques to identify the patterns that help you understand your customers, your business or your employees better.</p>
<p>First, we need to fully understand the business. In a perfect scenario, this understanding would come through architecture service and building of the system. If we do not participate in that phase we will have to go through workshops and documentation to create business requirements for this phase.  This is where our data science team comes to play. They analyze the business and the data and come up with algorithms that can produce meaningful results business wise. In the last step, data science and engineering teams team up to implement those new algorithms in the application, resulting in a better and smarter application. Our business experts are there to facilitate the process, help with implementation and verify if goals are met at the end.</p>
<p>A couple of things can be achieved in this service, data will be closer to business decision makers in a form that has a meaning, application will be closer to customers and their needs, time for reaction will be lower because everything will be well displayed and transparent, new business ideas can arise from analytics and trending.</p>
<h3>Big Data Use cases</h3>
<ol>
<li><strong>Analytics systems</strong> which gather application usage information to make better end-user experience (example is an analytics system for a shopping cart which saves user searches each time and slowly learns how to show products which the user shows most interest in)</li>
<li><strong>Internet of things</strong> platform which collects device data, stores them and visualizes data in the form of reports, pie charts, trends and predictions</li>
<li><strong>Logging platform</strong>, since applications are growing, microservices is a trend in IT industry and it is becoming challenging to follow all logs and reports</li>
<li><strong>Gaming industry</strong> (similar to case 1) where game usage can be stored and analysed in order to adjust game play </li>
<li><strong>Data warehouse modernization</strong> which is about building on top of existing data warehouse infrastructure, leveraging big data technologies to improve system efficiency (pre processing, offloading, exploration)</li>
<li><strong>Fraud and intrusion detection</strong> systems that recognize fraud patterns and protect data</li>
<li><strong>Supply chain planning and process optimisation</strong> in various industries providing business intelligence and requirements prediction</li>
</ol>]]></rteContent>
        </ServiceItem>
      </Services>
      <Technologies id="1111" parentID="1057" level="3" creatorID="0" sortOrder="12" createDate="2015-09-15T19:01:57" updateDate="2015-09-19T12:37:00" nodeName="Technologies" urlName="technologies" path="-1,1255,1057,1111" isDoc="" nodeType="1109" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1153" nodeTypeAlias="Technologies">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[Technologies]]></title>
        <teamWidget><![CDATA[1098,1092,1095]]></teamWidget>
        <CertificateContainer id="1158" parentID="1111" level="4" creatorID="0" sortOrder="21" createDate="2015-09-15T20:36:48" updateDate="2015-09-19T12:37:00" nodeName="Certificates" urlName="certificates" path="-1,1255,1057,1111,1158" isDoc="" nodeType="1154" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="CertificateContainer">
          <CertificateItem id="1161" parentID="1158" level="5" creatorID="0" sortOrder="3" createDate="2015-09-15T20:41:15" updateDate="2015-09-19T12:37:00" nodeName="Scrum Alliance" urlName="scrum-alliance" path="-1,1255,1057,1111,1158,1161" isDoc="" nodeType="1155" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="CertificateItem">
            <certificateImage>1160</certificateImage>
            <certificateUrl><![CDATA[[
  {
    "name": "Scrum Alliance",
    "url": "https://www.scrumalliance.org/certifications",
    "target": "_blank",
    "icon": "icon-link"
  }
]]]></certificateUrl>
          </CertificateItem>
          <CertificateItem id="1163" parentID="1158" level="5" creatorID="0" sortOrder="4" createDate="2015-09-15T20:59:57" updateDate="2015-09-19T12:37:00" nodeName="Project Management Institute" urlName="project-management-institute" path="-1,1255,1057,1111,1158,1163" isDoc="" nodeType="1155" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="CertificateItem">
            <certificateImage>1162</certificateImage>
            <certificateUrl><![CDATA[[
  {
    "name": "Project Management Institute",
    "url": "http://www.pmi.org/",
    "target": "_blank",
    "icon": "icon-link"
  }
]]]></certificateUrl>
          </CertificateItem>
          <CertificateItem id="1165" parentID="1158" level="5" creatorID="0" sortOrder="5" createDate="2015-09-15T21:01:31" updateDate="2015-09-19T12:37:00" nodeName="Cassandra Certified" urlName="cassandra-certified" path="-1,1255,1057,1111,1158,1165" isDoc="" nodeType="1155" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="CertificateItem">
            <certificateImage>1164</certificateImage>
            <certificateUrl><![CDATA[[
  {
    "name": "Cassandra Certified",
    "url": "http://cassandrasummit-datastax.com/training-and-certification/",
    "target": "_blank",
    "icon": "icon-link"
  }
]]]></certificateUrl>
          </CertificateItem>
        </CertificateContainer>
        <TechnologyItem id="1114" parentID="1111" level="4" creatorID="0" sortOrder="22" createDate="2015-09-15T19:05:39" updateDate="2015-09-19T12:37:00" nodeName="Cassandra" urlName="cassandra" path="-1,1255,1057,1111,1114" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1113</technologyImage>
          <technologyDescription><![CDATA[Scalable, distributed and highly available database. Great for reliable storing of high velocity or high amounts of data. Our first choice when we need linear scaling.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1116" parentID="1111" level="4" creatorID="0" sortOrder="23" createDate="2015-09-15T19:06:24" updateDate="2015-09-19T12:37:00" nodeName="MongoDB" urlName="mongodb" path="-1,1255,1057,1111,1116" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1115</technologyImage>
          <technologyDescription><![CDATA[Fast document storage with decent single node performance. We tend to use it for fast prototyping or regex matching. Searchable JSONs are a big help when designing REST APIs.]]></technologyDescription>
          <memberContact><![CDATA[1098]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1118" parentID="1111" level="4" creatorID="0" sortOrder="24" createDate="2015-09-15T19:07:07" updateDate="2015-09-19T12:37:00" nodeName="Redis" urlName="redis" path="-1,1255,1057,1111,1118" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1117</technologyImage>
          <technologyDescription><![CDATA[Perfect when we need fast distributed in-memory key-value store. Session storage or caching come as a first association.]]></technologyDescription>
          <memberContact><![CDATA[1092]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1120" parentID="1111" level="4" creatorID="0" sortOrder="25" createDate="2015-09-15T19:07:48" updateDate="2015-09-19T12:37:00" nodeName="RabbitMQ" urlName="rabbitmq" path="-1,1255,1057,1111,1120" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1119</technologyImage>
          <technologyDescription><![CDATA[We like this AMQP implementation because it is widespread, compatible with almost all technologies and it has great community support. Perfect for small to mid sized messaging systems.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1122" parentID="1111" level="4" creatorID="0" sortOrder="26" createDate="2015-09-15T19:08:23" updateDate="2015-09-19T12:37:00" nodeName="Kafka" urlName="kafka" path="-1,1255,1057,1111,1122" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1121</technologyImage>
          <technologyDescription><![CDATA[Fast and scalable distributed pub-sub commit log. Great for base layer in data infrastructure and our first choice for messaging system.]]></technologyDescription>
          <memberContact><![CDATA[1098]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1124" parentID="1111" level="4" creatorID="0" sortOrder="27" createDate="2015-09-15T19:09:30" updateDate="2015-09-19T12:37:01" nodeName="OMQ" urlName="omq" path="-1,1255,1057,1111,1124" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1123</technologyImage>
          <technologyDescription><![CDATA[Lightweight message oriented socket implementation used in high throughput and low latency scenarios but requires a lot of manual implementing.]]></technologyDescription>
          <memberContact><![CDATA[1092]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1126" parentID="1111" level="4" creatorID="0" sortOrder="28" createDate="2015-09-15T19:10:04" updateDate="2015-09-19T12:37:01" nodeName="Akka" urlName="akka" path="-1,1255,1057,1111,1126" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1125</technologyImage>
          <technologyDescription><![CDATA[Implementation of Actor pattern enabling easy building of highly concurrent, distributed and resilient message driven systems with non-blocking back pressure. Give an event to Akka agent and the job will be done.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1128" parentID="1111" level="4" creatorID="0" sortOrder="29" createDate="2015-09-15T19:10:49" updateDate="2015-09-19T12:37:01" nodeName="Solr" urlName="solr" path="-1,1255,1057,1111,1128" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1127</technologyImage>
          <technologyDescription><![CDATA[Built on top of Lucene search server, Solr is our choice when it comes to scalable and reliable distributed indexing. Deployed on top of Cassandra provides unprecedented performance and reliability.]]></technologyDescription>
          <memberContact><![CDATA[1098]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1130" parentID="1111" level="4" creatorID="0" sortOrder="30" createDate="2015-09-15T19:11:39" updateDate="2015-09-19T12:37:01" nodeName="Elastic" urlName="elastic" path="-1,1255,1057,1111,1130" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1129</technologyImage>
          <technologyDescription><![CDATA[Modern distributed, scalable and highly available indexing engine, we like its json API and choice of plugins. When we want to solve problems with log monitoring we use it as a part of ELK stack (Elasticsearch, Logstash, Kibana).]]></technologyDescription>
          <memberContact><![CDATA[1092]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1132" parentID="1111" level="4" creatorID="0" sortOrder="31" createDate="2015-09-15T19:12:16" updateDate="2015-09-19T12:37:01" nodeName="Spark" urlName="spark" path="-1,1255,1057,1111,1132" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1131</technologyImage>
          <technologyDescription><![CDATA[Fast and distributed near-realtime computing framework with great data programming abstraction used for data streaming and processing and machine learning. When we need complex queries and easy data migration for cassandra, Spark comes to the rescue.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1134" parentID="1111" level="4" creatorID="0" sortOrder="32" createDate="2015-09-15T19:12:50" updateDate="2015-09-19T12:37:01" nodeName="Storm" urlName="storm" path="-1,1255,1057,1111,1134" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1133</technologyImage>
          <technologyDescription><![CDATA[Distributed realtime computation system used for reliable processing of unbounded streams of data. When Spark’s near-realtime is not fast enough, we use Storm.]]></technologyDescription>
          <memberContact><![CDATA[1092]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1136" parentID="1111" level="4" creatorID="0" sortOrder="33" createDate="2015-09-15T19:13:25" updateDate="2015-09-19T12:37:01" nodeName="Spring" urlName="spring" path="-1,1255,1057,1111,1136" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1135</technologyImage>
          <technologyDescription><![CDATA[Started to become huge, but they gave it new life with spring boot in this microservice era, great for aspect oriented programming, DiC, has nice messaging abstraction and we have been using it from our java beginnings.]]></technologyDescription>
          <memberContact><![CDATA[1098]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1138" parentID="1111" level="4" creatorID="0" sortOrder="34" createDate="2015-09-15T19:14:07" updateDate="2015-09-19T12:37:01" nodeName="Java" urlName="java" path="-1,1255,1057,1111,1138" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1137</technologyImage>
          <technologyDescription><![CDATA[General purpose language with multi platform support. Object oriented with first baby steps in functional world from version 8. We like how it fits in big data ecosystems, since most of tools have great support for it.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1140" parentID="1111" level="4" creatorID="0" sortOrder="35" createDate="2015-09-15T19:15:21" updateDate="2015-09-19T12:37:01" nodeName="Scala" urlName="scala" path="-1,1255,1057,1111,1140" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1139</technologyImage>
          <technologyDescription><![CDATA[Both object oriented and functional language, Scala is our language of choice when we use Akka and Spark. It runs on JVM so we can mix and match with java.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1142" parentID="1111" level="4" creatorID="0" sortOrder="36" createDate="2015-09-15T19:16:24" updateDate="2015-09-19T12:37:01" nodeName="C#" urlName="c" path="-1,1255,1057,1111,1142" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1141</technologyImage>
          <technologyDescription><![CDATA[Being a simple, general-purpose object-oriented language, C# is our choice when developing on .NET platform. It can be used as an imperative, declarative and functional language.]]></technologyDescription>
          <memberContact><![CDATA[1098]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1144" parentID="1111" level="4" creatorID="0" sortOrder="37" createDate="2015-09-15T19:17:16" updateDate="2015-09-19T12:37:01" nodeName="Rails" urlName="rails" path="-1,1255,1057,1111,1144" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1143</technologyImage>
          <technologyDescription><![CDATA[Ruby is our language of choice for scripting: when you program with ruby it feels like playing a game. Rails is a powerful web framework which can solve most our problems, and with little or no JavaScript!]]></technologyDescription>
          <memberContact><![CDATA[1092]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1146" parentID="1111" level="4" creatorID="0" sortOrder="38" createDate="2015-09-15T19:17:58" updateDate="2015-09-19T12:37:01" nodeName="Cucumber" urlName="cucumber" path="-1,1255,1057,1111,1146" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1145</technologyImage>
          <technologyDescription><![CDATA[We want to be in full control of our APIs and want to give our clients ability to help us when writing feature tests. Cucumber gives us that confidence.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1148" parentID="1111" level="4" creatorID="0" sortOrder="39" createDate="2015-09-15T19:18:47" updateDate="2015-09-19T12:37:01" nodeName="Go" urlName="go" path="-1,1255,1057,1111,1148" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1147</technologyImage>
          <technologyDescription><![CDATA[Modern deployment tool, which helps us with devops, visualizes our pipelines and saves a great amount of time by automation.]]></technologyDescription>
          <memberContact><![CDATA[1098]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1150" parentID="1111" level="4" creatorID="0" sortOrder="40" createDate="2015-09-15T19:19:19" updateDate="2015-09-19T12:37:01" nodeName="Ansible" urlName="ansible" path="-1,1255,1057,1111,1150" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1149</technologyImage>
          <technologyDescription><![CDATA[Plain English automation language that enables easy IT automation of development setup or application deployment. Native scripting is fun but Ansible makes it easy with a minimal learning curve.]]></technologyDescription>
          <memberContact><![CDATA[1095]]></memberContact>
        </TechnologyItem>
        <TechnologyItem id="1152" parentID="1111" level="4" creatorID="0" sortOrder="41" createDate="2015-09-15T19:19:46" updateDate="2015-09-19T12:37:01" nodeName="Docker" urlName="docker" path="-1,1255,1057,1111,1152" isDoc="" nodeType="1110" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TechnologyItem">
          <technologyImage>1151</technologyImage>
          <technologyDescription><![CDATA[Simplified application packaging and deployment with easy scaling and inbuilt security. Great for both development and production when we want to eliminate environment inconsistencies and accelerate development.]]></technologyDescription>
          <memberContact><![CDATA[1092]]></memberContact>
        </TechnologyItem>
      </Technologies>
      <Process id="1168" parentID="1057" level="3" creatorID="0" sortOrder="13" createDate="2015-09-15T23:20:56" updateDate="2015-09-19T12:37:01" nodeName="Process" urlName="process" path="-1,1255,1057,1168" isDoc="" nodeType="1166" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1178" nodeTypeAlias="Process">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[Process]]></title>
        <rteContent><![CDATA[<p>Clear, transparent and proactive communication is our obsession. So you can always be in the know. It is your right as our customer.</p>
<p>Our solution design process, software development methodology and project management standards are based on globally acclaimed standards such as SMART data process, agile development methodologies and PMI standards. These standards guarantee a top-notch level of our service.</p>
<p>We aim to impress our clients with our professionalism, operational maturity and customer service. The only way to bring value is to solve problems, to create solutions. The only way to understand them is to understand the environment, history and the big picture. We strongly believe that doing anything without full understanding is a clear sign of lack of dedication; a lack of care that can never bring out the full potential of a fruitful cooperation.</p>
<p>Your goals become our goals and  we achieve them together. Our victory is our mutual growth. Our mistakes become learning points for all of us and an opportunity for constant improvement. The neverending strive for perfection. Learning. Evolving. </p>]]></rteContent>
        <teamWidget><![CDATA[1095,1098,1092]]></teamWidget>
        <ProcessItem id="1171" parentID="1168" level="4" creatorID="0" sortOrder="4" createDate="2015-09-15T23:28:06" updateDate="2015-09-19T12:37:01" nodeName="Setup" urlName="setup" path="-1,1255,1057,1168,1171" isDoc="" nodeType="1167" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="ProcessItem">
          <processImage>1170</processImage>
          <processDescription><![CDATA[In order to gain new insights and find the answers, one must know which questions to ask. In this phase, our team of Consultants, Business Analysts and Data Scientists works with you to identify a list of strategically important questions that will help you understand your customer needs better, gain new insight into operational efficiency, gauge employee engagement and satisfaction or help understand efficiency of a marketing initiative. Once we know the questions, we plan out getting the answers. We identify the data sources, types of data we want to analyze and how we intend to tie it all together.]]></processDescription>
        </ProcessItem>
        <ProcessItem id="1173" parentID="1168" level="4" creatorID="0" sortOrder="5" createDate="2015-09-15T23:28:52" updateDate="2015-09-19T12:37:01" nodeName="Capture" urlName="capture" path="-1,1255,1057,1168,1173" isDoc="" nodeType="1167" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="ProcessItem">
          <processImage>1172</processImage>
          <processDescription><![CDATA[Based on the output of last phase, we get to work to make it come to life. Our Big Data Technologies Experts and other Software Engineers work to implement the software solutions that will store, process and analyze the gathered information. Your involvement in this phase is also essential as our process demands early feedback to ensure we’re doing exactly what you had in mind. As our customer you will participate in the Solution Design Phase (Prototyping → Proof of Concept → Review & Optimize) after which we will implement, launch and fine-tune the solution in production environment.]]></processDescription>
        </ProcessItem>
        <ProcessItem id="1175" parentID="1168" level="4" creatorID="0" sortOrder="6" createDate="2015-09-15T23:29:22" updateDate="2015-09-19T12:37:01" nodeName="Analyze" urlName="analyze" path="-1,1255,1057,1168,1175" isDoc="" nodeType="1167" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="ProcessItem">
          <processImage>1174</processImage>
          <processDescription><![CDATA[Once the system is in place for capturing the data, it’s time to distill it into precious information that will allow for new insights to emerge. Our multidisciplinary team of Consultants, Business Analysts, Graphic Designers and Front-end Software Engineers will create insightful representations of collected data in a graphical and eye-opening ways. Ways that answer those strategic questions identified in the Setup phase.]]></processDescription>
        </ProcessItem>
        <ProcessItem id="1177" parentID="1168" level="4" creatorID="0" sortOrder="7" createDate="2015-09-15T23:29:53" updateDate="2015-09-19T12:37:01" nodeName="Utilize" urlName="utilize" path="-1,1255,1057,1168,1177" isDoc="" nodeType="1167" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="ProcessItem">
          <processImage>1176</processImage>
          <processDescription><![CDATA[Whether it’s improving your product or service based on gained knowledge about customer needs or if its implementing organizational change to allow for optimization of the way you work, our team can help you devise a plan for implementing changes and couple it with a business intelligence solution that will provide real-time data insights to help gauge effectiveness and fine-tune the processes.]]></processDescription>
        </ProcessItem>
      </Process>
      <Team id="1087" parentID="1057" level="3" creatorID="0" sortOrder="14" createDate="2015-09-15T00:06:31" updateDate="2015-09-19T12:37:01" nodeName="Team" urlName="team" path="-1,1255,1057,1087" isDoc="" nodeType="1085" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1105" nodeTypeAlias="Team">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[Our team]]></title>
        <mainContent><![CDATA[<p>We are a carefully selected team of industry seniors with highly set goals. We are here to deliver outstanding service and remarkable solutions.<br /> This is not our job. These are our lives. Knowledge is our thirst and dedication is our lifestyle.</p>
<p>We want to make the world a better place through technological advances. We trust in facts, and making smart decisions using the same. We are here to empower decision makers with information, with knowledge. This is the age of information and we are your agents. There’s no better way to gain a new perspective than challenging the way things are. Challenge the present and you are participating in the creation of the future.</p>
<p>We are dedicated to excellence. A challenge is what makes us tick. Perfection is our goal. The pursuit of excellence is a neverending road, that will keep improving our services, our team and the world around us. We aim to impress, our lives are too short for anything less than that. Do it right or don’t do it at all. It’s a tough road that leads to the top of the mountain, but it’s the only thing that feels right, that truly fulfills us. </p>
<p>We believe in relentless professionalism and freedom of information.<br /> We are here to fight ignorance and uphold the enlightenment. We are here to bring about transparency and exercise acceptance. We are not afraid of making mistakes - they will only make us grow. We have nothing to hide and everything to gain. Embrace the change, lead the way, adapt, learn, grow.</p>]]></mainContent>
        <TeamMember id="1092" parentID="1087" level="4" creatorID="0" sortOrder="6" createDate="2015-09-15T00:34:15" updateDate="2015-09-19T12:37:01" nodeName="Bojan Kovac" urlName="bojan-kovac" path="-1,1255,1057,1087,1092" isDoc="" nodeType="1086" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TeamMember">
          <profileImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1013/team-bojan.png",
  "crops": [
    {
      "alias": "team",
      "width": 499,
      "height": 560,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    },
    {
      "alias": "home",
      "width": 499,
      "height": 555,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.0089285714285714489
      }
    },
    {
      "alias": "sidebar",
      "width": 200,
      "height": 189,
      "coordinates": {
        "x1": 4.2632564145605995E-16,
        "y1": 0,
        "x2": 0,
        "y2": 0.15793750000000037
      }
    }
  ]
}]]></profileImage>
          <technologyImage>1090</technologyImage>
          <contactImage>1091</contactImage>
          <workPosition><![CDATA[Co-Founder]]></workPosition>
          <shortDescription><![CDATA[A computer science graduate with over 10 years of experience managing software projects and product development while leading organizational changes towards operational maturity and efficiency.]]></shortDescription>
          <quote><![CDATA["Any fool can know. The point is to understand." 							]]></quote>
          <emailAddress><![CDATA[bojan.kovac@smartcat.io]]></emailAddress>
          <firstName><![CDATA[Bojan]]></firstName>
          <lastName><![CDATA[Kovac]]></lastName>
          <linkedIn><![CDATA[https://rs.linkedin.com/in/bojankovac]]></linkedIn>
        </TeamMember>
        <TeamMember id="1095" parentID="1087" level="4" creatorID="0" sortOrder="7" createDate="2015-09-15T00:39:30" updateDate="2015-09-19T12:37:01" nodeName="Matija Gobec" urlName="matija-gobec" path="-1,1255,1057,1087,1095" isDoc="" nodeType="1086" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TeamMember">
          <profileImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1016/team-matija.png",
  "crops": [
    {
      "alias": "team",
      "width": 499,
      "height": 560,
      "coordinates": {
        "x1": 0,
        "y1": 2.5263741715914678E-16,
        "x2": 0.053561026352288196,
        "y2": 0
      }
    },
    {
      "alias": "home",
      "width": 499,
      "height": 555,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0.045034549112218943,
        "y2": 1.2631870857957334E-16
      }
    },
    {
      "alias": "sidebar",
      "width": 200,
      "height": 189,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.11028336380255939
      }
    }
  ]
}]]></profileImage>
          <technologyImage>1093</technologyImage>
          <contactImage>1094</contactImage>
          <workPosition><![CDATA[Co-Founder]]></workPosition>
          <shortDescription><![CDATA[Polyglot engineer with open minded approach to technologies. Always looking for new challenges and seeking for knowledge.]]></shortDescription>
          <quote><![CDATA["Life begins at the end of the comfort zone."]]></quote>
          <emailAddress><![CDATA[matija.gobec@smartcat.io]]></emailAddress>
          <firstName><![CDATA[Matija]]></firstName>
          <lastName><![CDATA[Gobec]]></lastName>
          <gitHub><![CDATA[https://github.com/mgobec]]></gitHub>
          <twitter><![CDATA[https://twitter.com/mad_max0204]]></twitter>
          <linkedIn><![CDATA[https://www.linkedin.com/in/matijagobec]]></linkedIn>
        </TeamMember>
        <TeamMember id="1098" parentID="1087" level="4" creatorID="0" sortOrder="8" createDate="2015-09-15T00:42:18" updateDate="2015-09-19T12:37:01" nodeName="Nenad Bozic" urlName="nenad-bozic" path="-1,1255,1057,1087,1098" isDoc="" nodeType="1086" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TeamMember">
          <profileImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1019/home-nenad.png",
  "crops": [
    {
      "alias": "team",
      "width": 499,
      "height": 560,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0.0089285714285714576,
        "y2": 0
      }
    },
    {
      "alias": "home",
      "width": 499,
      "height": 555,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    },
    {
      "alias": "sidebar",
      "width": 200,
      "height": 189,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.15035135135135141
      }
    }
  ]
}]]></profileImage>
          <technologyImage>1096</technologyImage>
          <contactImage>1097</contactImage>
          <workPosition><![CDATA[Co-founder]]></workPosition>
          <shortDescription><![CDATA[Craftsman with more than 10 years of experience, when he does backend coding in Java he feels right at home but likes to do short excursions in other technologies like ruby on rails, angularJS, PHP…]]></shortDescription>
          <quote><![CDATA["Choose the right technology for the right job."]]></quote>
          <emailAddress><![CDATA[nenad.bozic@smartcat.io]]></emailAddress>
          <firstName><![CDATA[Nenad]]></firstName>
          <lastName><![CDATA[Bozic]]></lastName>
          <gitHub><![CDATA[https://github.com/nbozic]]></gitHub>
          <twitter><![CDATA[https://twitter.com/nenadbozicns]]></twitter>
          <facebook><![CDATA[https://en-gb.facebook.com/nbozicns]]></facebook>
          <linkedIn><![CDATA[https://rs.linkedin.com/pub/nenad-bozic/32/1b6/b30]]></linkedIn>
        </TeamMember>
        <TeamMember id="1100" parentID="1087" level="4" creatorID="0" sortOrder="9" createDate="2015-09-15T00:45:01" updateDate="2015-09-19T12:37:02" nodeName="Sasa Popovic" urlName="sasa-popovic" path="-1,1255,1057,1087,1100" isDoc="" nodeType="1086" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TeamMember">
          <profileImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1021/team-sasa.png",
  "crops": [
    {
      "alias": "team",
      "width": 499,
      "height": 560,
      "coordinates": {
        "x1": 0.02271332105586249,
        "y1": 0,
        "x2": 0.066523064105937058,
        "y2": 0
      }
    },
    {
      "alias": "home",
      "width": 499,
      "height": 555,
      "coordinates": {
        "x1": 0.018170656844689992,
        "y1": 0,
        "x2": 0.062860650705954577,
        "y2": 0
      }
    },
    {
      "alias": "sidebar",
      "width": 200,
      "height": 189,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.075432432432432431
      }
    }
  ]
}]]></profileImage>
          <technologyImage>1099</technologyImage>
          <workPosition><![CDATA[Partner]]></workPosition>
          <shortDescription><![CDATA[Sasa's passionate attention to detail and steadfast dedication to executing creative development and design solutions have established him as a leader of the IT field.]]></shortDescription>
          <quote><![CDATA["Be true to your vision and don’t argue for your own limitations."]]></quote>
          <emailAddress><![CDATA[sasa.popovic@smartcat.io]]></emailAddress>
          <firstName><![CDATA[Sasa]]></firstName>
          <lastName><![CDATA[Popovic]]></lastName>
          <linkedIn><![CDATA[https://www.linkedin.com/in/popovicsasa]]></linkedIn>
        </TeamMember>
        <TeamMember id="1102" parentID="1087" level="4" creatorID="0" sortOrder="10" createDate="2015-09-15T00:47:06" updateDate="2015-09-19T12:37:02" nodeName="Vladan Ostojic" urlName="vladan-ostojic" path="-1,1255,1057,1087,1102" isDoc="" nodeType="1086" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TeamMember">
          <profileImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1023/team-vladan.png",
  "crops": [
    {
      "alias": "team",
      "width": 499,
      "height": 560,
      "coordinates": {
        "x1": 0.019378458918688807,
        "y1": 0,
        "x2": 0.0093195432706925062,
        "y2": 0
      }
    },
    {
      "alias": "home",
      "width": 499,
      "height": 555,
      "coordinates": {
        "x1": 0.019947533740636972,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    },
    {
      "alias": "sidebar",
      "width": 200,
      "height": 189,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.13305799648506153
      }
    }
  ]
}]]></profileImage>
          <technologyImage>1101</technologyImage>
          <workPosition><![CDATA[Partner]]></workPosition>
          <shortDescription><![CDATA[Vladan has amassed a decade of experience as an outsourcing engineer and computer scientist in the software development and mobile communications industry.]]></shortDescription>
          <quote><![CDATA["Think like a customer and you'll always provide good service."]]></quote>
          <emailAddress><![CDATA[vladan.ostojic@smartcat.io]]></emailAddress>
          <firstName><![CDATA[Vladan]]></firstName>
          <lastName><![CDATA[Ostojic]]></lastName>
          <linkedIn><![CDATA[http://nl.linkedin.com/in/vladanos]]></linkedIn>
        </TeamMember>
        <TeamMember id="1104" parentID="1087" level="4" creatorID="0" sortOrder="11" createDate="2015-09-15T00:49:27" updateDate="2015-09-19T12:37:02" nodeName="Boban Miksin" urlName="boban-miksin" path="-1,1255,1057,1087,1104" isDoc="" nodeType="1086" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TeamMember">
          <profileImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1025/team-boban.png",
  "crops": [
    {
      "alias": "team",
      "width": 499,
      "height": 560,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.011071788968006939
      }
    },
    {
      "alias": "home",
      "width": 499,
      "height": 555,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.019901505137935541
      }
    },
    {
      "alias": "sidebar",
      "width": 200,
      "height": 189,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0.16726063829787238
      }
    }
  ]
}]]></profileImage>
          <technologyImage>1103</technologyImage>
          <workPosition><![CDATA[Partner]]></workPosition>
          <shortDescription><![CDATA[Boban uses the simple methods of an agile developer in regards to his architecture. He understands that a builder must live inside the project, anticipating, creating, and mastering the path of its evolution, making sure it works, and that it's right, every step of the way.]]></shortDescription>
          <quote><![CDATA["What got you here won't get you there."]]></quote>
          <emailAddress><![CDATA[boban.miksin@smartcat.io]]></emailAddress>
          <firstName><![CDATA[Boban]]></firstName>
          <lastName><![CDATA[Miksin]]></lastName>
          <linkedIn><![CDATA[https://www.linkedin.com/in/boban]]></linkedIn>
        </TeamMember>
      </Team>
      <Blog id="1181" parentID="1057" level="3" creatorID="0" sortOrder="15" createDate="2015-09-16T00:06:00" updateDate="2015-09-19T12:37:02" nodeName="Blog" urlName="blog" path="-1,1255,1057,1181" isDoc="" nodeType="1179" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1182" nodeTypeAlias="Blog">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[Blog]]></title>
        <teamWidget><![CDATA[1098,1095,1092]]></teamWidget>
        <serviceWidget><![CDATA[1081,1082,1083,1084]]></serviceWidget>
        <BlogPost id="1184" parentID="1181" level="4" creatorID="0" sortOrder="8" createDate="2015-09-16T00:51:55" updateDate="2015-09-19T12:37:02" nodeName="Leveraging parallel execution" urlName="leveraging-parallel-execution" path="-1,1255,1057,1181,1184" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Leveraging parallel execution]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1053/leveraging_parallel_execution_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>With NoSql databases comes change in physical data modelling. When it comes to truly distributed databases, data model is denormalized and, in case of Cassandra, based on the way we query data. The idea behind this is that each query is going to target only single partition (file) on a node and read will require only single disk seek. Sometimes, there are some cases where we need to query from multiple partitions but there is no need to create a model to support all the required data in a single partition. Cassandra query language (CQL) supports executing queries with an IN clause. This is nice to have but it's usually too much strain on a coordinator node and should be avoided in the long run. On the other hand, there are some cases where we need to query different tables thus executing multiple partition queries but without the possibility to use the IN clause. This is where parallel execution comes to play.</p>
<p>Cassandra datastax driver provides a great ability to execute a sequence of queries on multiple nodes and by doing that, leverage the power of a distributed system.</p>
<p>Imagine we have a group of people and we need to ask them a set of questions. For each question, there are 3 people in the group that know the answer. Each person knows who are the 3 that know the answer. If we give a list with all the questions to one guy who then needs to find all the people that know the answers in a sequence and then return to us with all the answers it will take some time and that one guy will have to do a lot of work.</p>
<p>On the other hand, if we ask each question to a different person in a round robin fashion, then a lot of questions will be answered in parallel and answer bearers will get back to us quicker and in about the same time.</p>
<p>When this is translated to Cassandra nodes, the first case scenario would require coordinator node (the one that we give all the questions to) to go around and query other nodes for data and then acquire all the answers, put them in a single dataset and return to us. The second scenario would be to go around the cluster and query each node with the next request in the list. This would give much better results since there are a lot more workers working on getting the requested data from replica node.</p>
<p>Here’s one example: <br />Let’s say we have a logger on gates of some stadium entrance. Each gate will track people coming in at some time and distinguish them by their ticket number.</p>
<p>Now imagine that this is going on every day and we are keeping all the records throughout the year for each gate. If we know that one gate would hold up a fairly small number of entrance records (10-20k) per year then it’s fine if we keep it in one partition. There are some queries that require us to have this partitioned per gate so that we could also make some analysis easier. Now there could be hundreds of gates per stadium and we want to get all that information for the whole year. Here comes the benefit of parallel queries. So, instead of making coordinator node execute all these queries for each gate for that stadium, we will execute all the queries in parallel. This drastically reduces the response time of the complete query because there is a lot happening in parallel. The driver itself provides the future handle for the result, so when the query is finished, it populates the result and we can collect the data.</p>
<p>Instead of querying with the IN clause and putting too much stress on a single node, we are executing multiple queries in a round robin pattern and the stress is distributed across all nodes in the system, but also the possibility to hit replica node is higher. We can instantly get a response by querying data from replica node. In a 20 node cluster with replication factor of 3 there is a 15% chance that the coordinator node will be the replica node. This is not much of a chance but it beats a single node query any time. In a larger scale system with a large number of nodes, this should be solved by using spark and cassandra spark connector which is data aware and all the queries would get executed against nodes holding the data (replica nodes).</p>]]></rteContent>
          <author><![CDATA[1098]]></author>
          <blogTitle><![CDATA[Leveraging parallel execution]]></blogTitle>
          <postDate>2015-08-08T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1185" parentID="1181" level="4" creatorID="0" sortOrder="9" createDate="2015-09-16T00:55:50" updateDate="2015-09-19T12:37:02" nodeName="Setting up embedded cassandra on spring project" urlName="setting-up-embedded-cassandra-on-spring-project" path="-1,1255,1057,1181,1185" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Setting up embedded cassandra on spring project]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.33,
    "top": 0.5390625
  },
  "src": "/media/1054/setting-up-embedded-cassandra-with-spring.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.11656005685856433,
        "y1": 0,
        "x2": 0.24378109452736318,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>When we first started using cassandra, we immediately realized there would be a long period of development and prototyping until we reach the stable repository classes we would use. It was a new technology, client demands were changing constantly (in cassandra you do query based modeling which means our repository classes changed as well) and we needed to build up confidence that we are doing right thing. We needed a tool which will give us fast feedback using production-like database setup without starting server, doing API triggers and checking what had landed in our database.  </p>
<p><a href="https://github.com/jsevellec/cassandra-unit" target="_blank">Cassandra unit</a>  gave us exactly what we needed, which was a java utility test tool providing us with an ability to test drive our repository and schema models according to the requirements. Basically, it starts embedded cassandra before test methods, has the ability to create structure and allows the developer to run cql queries against production-like database without constantly starting the application, and without the need to have full API designed. We have decided to go with Datastax driver, so Cassandra Unit enabled us to explore driver API in TDD manner. We receive the requirement, write the integration test using connected Session to Embedded Cassandra and start implementing until we see it turn green. </p>
<p>Setup in spring project and cleaning up the database between tests took quite an effort. We did this in a couple of steps. First, we created <em>TestCassandraConfiguration</em> which is plain Spring configuration class for active profile tests, and it creates the necessary beans and initializes Embedded Cassandra. The main thing here is to create a Session bean which we can use in other test methods to connect to our database.</p>
<pre class="csharpcode"> @Bean
    <span class="kwrd">public</span> Session session() throws Exception {
        <span class="kwrd">if</span> (session == <span class="kwrd">null</span>) {
            initialize();
        }




        <span class="kwrd">if</span> (sessionProxy == <span class="kwrd">null</span>) {
            sessionProxy = <span class="kwrd">new</span> SessionProxy(session);
        }




        <span class="kwrd">return</span> sessionProxy;
    }
</pre>
<p>   </p>
<p>    For now, we will ignore the <em>SessionProxy</em> thing, which will be explained later. If we do not have Session defined, initialize() method will start Embedded Cassandra, create a cluster and initialize table structure and connect to it. Here is the initialize method as well:    </p>
<pre class="csharpcode">	<span class="kwrd">private</span> <span class="kwrd">void</span> initialize() throws Exception {
        LOGGER.info(<span class="str">"Starting embedded cassandra server"</span>);
        EmbeddedCassandraServerHelper.startEmbeddedCassandra(<span class="str">"another-cassandra.yaml"</span>);




        LOGGER.info(<span class="str">"Connect to embedded db"</span>);
        cluster = Cluster.builder().addContactPoints(contact_points).withPort(port).build();
        session = cluster.connect();




        LOGGER.info(<span class="str">"Initialize keyspace"</span>);
        final CQLDataLoader cqlDataLoader = <span class="kwrd">new</span> CQLDataLoader(session);
        cqlDataLoader.load(<span class="kwrd">new</span> ClassPathCQLDataSet(CQL, <span class="kwrd">false</span>, <span class="kwrd">true</span>, keyspace));
    }
</pre>
<p>   </p>
<p>    We created this configuration as DisposableBean implementation which enabled us to use the destroy() method for total cleanup. The complete example with all details of the configuration file [link to file] can be found on our github account, showing how to wire everything up. It is a part of our Spring showcase for <a href="https://github.com/smartcat-labs/cassandra-migration-tool-java" target="_blank">cassanadra schema migration</a> tool we had created.     </p>
<p>   </p>
<p>    The second step is creating a listener which can be used on classes which need embedded cassandra. This listener is implementing <em>AbstractTestExecutionListener</em> and is responsible for cleanup between tests. It has <em>afterTestMethod()</em> which is doing cleanup.    </p>
<pre class="csharpcode">@Override
<span class="kwrd">public</span> <span class="kwrd">void</span> afterTestMethod(final TestContext testContext) throws Exception {
    LOGGER.debug(<span class="str">"AfterTest: clean embedded cassandra"</span>);
    final Session session = (Session) TestApplicationContext.getBean(<span class="str">"session"</span>);
    <span class="kwrd">for</span> (final String table : tables(session)) {
        session.execute(String.format(<span class="str">"TRUNCATE %s.%s;"</span>, KEYSPACE, table));
    }
    super.afterTestMethod(testContext);
}
</pre>
<p>   </p>
<p>    Nothing special here, for all tables we have in cluster metadata which we are fetching from session we perform truncate, so we can have a clean state before the next test. The complete details of this listener can be seen at [link here]. An important middle step in the communication between listener and configuration class is to create <em>TestApplicationContext</em> which will hold the beans defined in configuration and which can be used to access the Session bean.    </p>
<p>   </p>
<p>    The last step was loading this listener on each test method, and that was it, we had embedded cassandra working and our Session connected to it injected in all repository classes instead of the production Session which would be created from production code and would be connected to production cassandra cluster.    </p>
<pre class="csharpcode"> @TestExecutionListeners({CassandraTestExecutionListener.<span class="kwrd">class</span>,
     DependencyInjectionTestExecutionListener.<span class="kwrd">class</span>})
  <span class="kwrd">public</span> <span class="kwrd">class</span> SomeRepositoryTest {
      …..
  }</pre>
<p> </p>
<p>  Back to the <em>SessionProxy</em> thing. This was an another tweak we did. With cassandra we used executeAsync() as much as we could; whenever we didn’t need response immediately, we used it. The problem was to test this. First, we took the Thread.sleep() road and added pauses all over our tests to be sure something would be written in order to read and verify it. That slowed our test suite a lot and was not a particular solution since there were no guarantees write will finish in sleep amount of seconds. We stubbed ResultSetFuture which was a result of executeAsync() method on Session and created a proxy on top of Session which would override executeAsync() to work as regular execute. As a result, we got synchronous executions even when our repository method used executeAsync (only in tests of course) which made our life easier while testing. We did not have to worry anymore if the results are written and how long should we pause the execution. Details can also be seen here [link here].  </p>
<p> </p>
<p>  To sum it all up. Cassandra is not new to us anymore, but we still like to have repository classes integration tested against production cassandra like environment. Cassandra is known for its schema which evolves, modeling decisions must be revisited occasionally, so this gives us confidence that we can refactor and change. Also, performing tests this way has provided us a lot of insights into driver API much faster because we can now play with API and see the results right away. Last, but not the least, we are starting our backend applications much less often when we are developing database models, which significantly speeds up the development.  </p>]]></rteContent>
          <author><![CDATA[1092]]></author>
          <blogTitle><![CDATA[Setting up embedded cassandra on spring project]]></blogTitle>
          <postDate>2015-07-23T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1186" parentID="1181" level="4" creatorID="0" sortOrder="10" createDate="2015-09-16T00:57:35" updateDate="2015-09-19T12:37:02" nodeName="Migrating time series data from MySql to Cassandra" urlName="migrating-time-series-data-from-mysql-to-cassandra" path="-1,1255,1057,1181,1186" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Migrating time series data from MySql to Cassandra]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1055/migration-time-series_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.029850746268656716,
        "y1": 0,
        "x2": 0.33049040511727079,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>MySql is still widely used in application development as a stable, fairly performant and reliable relational database. People tend to use languages, technologies and tools they feel most comfortable with which is expected. We have got to the point where we generate more data daily than we can store or process, not to mention getting valuable information from it. I have worked on a project for one client where they had been storing time series data into MySql and after a year or two their database started to choke and indexing was falling apart. What's even worse they didn't even use that data properly but just stored it and displayed it with a couple of different queries.</p>
<p>The client’s requirement was to have better performance than it already was, with the ability to continue storing their event data. The problem with MySql was that they were getting web request timeouts before retrieving data from database. Queries were not complex at all but the sheer amount of data was too much for MySql. We had a competition with another company that went with Hadoop and we were going to measure up against them. Knowing that Hadoop didn’t have the speed that Cassandra has, this was no contest. On the other hand, Hadoop platform had more functionalities besides storage and would provide us with a way to analyze stored data but we had our eyes on Spark for that.</p>
<p>The first step was to define all the ways we need to query data in order to create a suitable data model. This is a crucial step with any database and especially with Cassandra because it has a query based data model.</p>
<p>After a few sessions together with engineers with domain knowledge we got to the point where all queries were covered and data model looked good. After initial implementation and testing, we had to make some minor changes to the data model to get the best performance possible. One of the issues when migrating from Cassandra is that the request timeout is probably much less by default than the database you are coming from. In Cassandra the default is 10 seconds and we opted for keeping that value. It sounds like a lot, but for some heavy queries MySql it took up to a minute or more. Since our events have a lot of information and tend to be bigger than the average time series data, query responses were easily measured in megabytes. Pulling that amount of data from replica nodes, merging it into a response on a coordinator, pushing it over the network and packing it up into application models has to take some time. We weren’t targeting millisecond or even sub millisecond responses but rather staying under that 10 seconds timeout.</p>
<p>When implementing our solution, we used all bells and whistles that .net driver has to offer. Starting out with a 5 node cluster, we were able to leverage the parallel execution of partition based queries. There is no benefit in executing parallel queries on the same partition since they will all get executed on the same replica nodes. When executing on different partitions there is a high chance that results will be handled by different nodes thus having the response time of the slowest node.</p>
<p>One of the major problems was having query limits while executing parallel queries on multiple partitions. We ended up having some overhead in these queries since you don’t know how many events will get queried from each partition because they are unevenly populated. Investigation proved that these queries made up a small percentage of total queries so we decided to leave it at that. There are different ways of handling this and squeezing more performance but all in all, we were happy with the results.</p>
<p>The end result was being able to query events for a one-year timespan with reasonable response time which was not even possible with mysql, and prioritized queries were several times faster than mysql. The benefits of this migration are mainly performance and scaling but we have also enabled the client to execute the analysis of their data which can help them improve their business.</p>]]></rteContent>
          <author><![CDATA[1098]]></author>
          <blogTitle><![CDATA[Migrating time series data from MySql to Cassandra]]></blogTitle>
          <postDate>2015-07-17T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1187" parentID="1181" level="4" creatorID="0" sortOrder="11" createDate="2015-09-16T00:59:54" updateDate="2015-09-19T12:37:02" nodeName="Cassandra use cases (what cassandra should not be used for)" urlName="cassandra-use-cases-what-cassandra-should-not-be-used-for" path="-1,1255,1057,1181,1187" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Cassandra use cases (what cassandra should not be used for)]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1056/cassandra-use-casses_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.15209665955934612,
        "y1": 0,
        "x2": 0.20824449182658139,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>Just a couple of years ago, the decisions faced by software architects were quite easy, such as which language to choose, in which DB to store data, what kind of frontend technology to use etc. Basically you could divide your application into a couple of building blocks, choose the best for each building block and use it throughout the whole application. </p>
<p>Big distributed systems, with huge data flow changed this game, microservices are new normal, and this multiplied problems with technology choices for each microservice. Now you should be a polyglot in every part of the system and choose the  best tool for each use case. But still, the assortment of many technologies in one system comes with a price. Maintenance costs are higher, it is hard to find people which will fit in the team, picking up small details of many technologies is hard so teams usually stay on basic to advanced level of knowledge in chosen technologies. </p>
<h3>Cassandra DB</h3>
<p>Cassandra is scalable and distributed partitioned row storage optimized for fast writes. It is an AP database based on CAP theorem with tunable C (tunable consistency). Basically you choose what is more important, availability or partition tolerance, and tune the consistency based on your choice. It is a masterless database, a new node in the cluster can pick up information from any node, which means there is no single point of failure, and database can be scaled horizontally. </p>
<p>As for data modeling, it is important to understand some of the implementation internals. Data is stored in rows which have partition keys, so the right choice of this key is important to build up performance. This is also important for data modeling, since in comparison with relational data modeling data is modeled as it will be read, not written. Basically you should think of queries and model data like that. Data is denormalized, it can exist in multiple columns and each column is optimized for one query. For example if you need to find books by genre, but also by author, you will most likely end up with two columns, one with genre key and other with author key. So, searching by genre would be one disk seek which will pick up the whole column of books partitioned by requested genre. </p>
<h3>Use cases</h3>
<p>Designing as explained above makes cassandra a perfect candidate when working with events. They come sequentially and you can store them in one column, sorted by time, and partitioned by data which will be interesting when doing queries. We worked on an event system and that was the main reason why we chose it. Also, you can partition events into time buckets (by day, week, month) and view each time bucket as a new column, which makes the perfect data store for drawing charts. The data is duplicated, and choosing precision in the chart from one week to one month represents one additional disk seek in another column.</p>
<p>Since we made a choice based on the event use case we decided to place our master data in cassandra as well. Articles for retail industry were master data which represent a big object with lots of properties (size, color, name, description, barcode, price etc.). At that time, there were no extensive searching requirements (we needed articles only by unique identifier) so we decided to go with cassandra as data store for master data as well.</p>
<h3>Problems</h3>
<p>Since in cassandra you model data based on queries, the important thing to note is that you must change your data model along the way. When new requirements for querying data appear, the data model must be changed, or you will end up with a wrong or overly complicated data model. We learned that the hard way.</p>
<p>The first requirement appeared in relation to syncing with devices, where we needed information about the time of last update for each article and we needed to sync only the changed articles. Since we stored articles based on unique identifiers and updated information on each batch update, we needed a new table. The idea was to have articles by the times of their updates, so you can pass time and get all articles updated since that time. The articles were updated and we needed only the latest update (not the whole history), also we needed to page through that table without duplicates which caused the first problem, we needed to delete the previous entry from that table and keep only the last one. To do that, we needed the time of last update of the changed article and in order to do that we needed to do read before write (famous anti-pattern in cassandra). Doing this on a large scale was slow, time consuming and error prone. For each update we created many tombstones from delete insert and soon afterwards, in big updates we ran into a tombstones limit reached problem. In other words, our data model started to talk to us. Maintaining this monster logic of reading before writing became a nightmare, debugging, adding small stuff, every small step started to hurt. On the bright side, we at least became aware of the data model problem and we pushed the code as is, since this was a startup phase and change would be time consuming.</p>
<p>The second requirement really made us drop the whole cassandra article storage, or at least partially. Our web application became overwhelmed with article information and we wanted to give the users a possibility to search, filter and narrow the list. Since articles have lots of attributes, this would provide many possibilities of combining queries (search by color, price, size, narrow search by brand, store etc.). This would be impossible to do in cassandra, since that would mean duplicating articles in many tables, each by single criteria, and do intersections or unions on application level. This has triggered a new research regarding tackling both problems.  </p>
<h3>Possible solutions</h3>
<p>The second requirement made us lean more to indexing engines, particularly solr and elasticsearch. We were aware that apache spark sql module could solve complicated queries at application level and it was powerful when placed over cassandra, but we did not want to make a relational database of cassandra. Our idea was to use cassandra with a single table as permanent storage and to index articles for searching and syncing requirement. The core of our system is message queue so storing stuff in elasticsearch was just a matter of adding one more subscriber to storing queue. Slowly, data started to be indexed in elasticsearch which gave us searching possibilities in the distributed indexing engine, and we got rest API for free. Also, we could query the articles by their last update, so this solved the first problem as well. Basically, first we find the article, check hash over content of indexed article with hash over content of article which is coming to server, and if it is changed, reindex and update in cassandra. Devices can sync by querying elasticsearch API directly and this is bloody fast.</p>
<h3>Conclusion</h3>
<p>Cassandra is a great DB but not for everything. It works great with sensor data, time series data and easy reads without too much query combinations. When there is a need to do read before write you are doing something right so stop and rethink. With microservices and polyglot being new, normal developers should not be afraid to use multiple databases on projects and to combine master data in one storage with events over that data stored in cassandra where they fit perfectly.</p>
<p>Software engineering came to a point where choosing the right technology to do the right job is essential. Instead of huge enterprise solutions which do everything and everything on average the key is to choose small tools which do a perfect job for tasks you need to do. This comes naturally with drawbacks, maintenance is expensive, you cannot find people and introduce them to projects easily, you cannot be an expert in all technologies. But we are witnessing a shift in industry which will facilitate these challenges, where companies turn from big size do-it-all shops to small specialized shops which provide consulting services in smaller areas. We think that the key will be good cooperation between those companies in handling big projects. Do not be afraid to move from your comfort zone and explore new technology, it might be that the tool which solves perfectly the problem you are facing, like elasticsearch in our case, is just around the corner.</p>]]></rteContent>
          <author><![CDATA[1098]]></author>
          <blogTitle><![CDATA[Cassandra use cases (what cassandra should not be used for)]]></blogTitle>
          <postDate>2015-06-15T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1188" parentID="1181" level="4" creatorID="0" sortOrder="12" createDate="2015-09-16T01:02:31" updateDate="2015-09-19T12:37:02" nodeName="Blackbox testing microservices" urlName="blackbox-testing-microservices" path="-1,1255,1057,1181,1188" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Blackbox testing microservices]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1057/black-box-testing_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.18194740582800284,
        "y1": 0,
        "x2": 0.17839374555792467,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>Microservice architecture is the new normal these days, especially with the growth of distributed systems and need for scalability and fault tolerance. You partition your application in small “two pizza team” services, and they collaborate together to achieve the application goal. This is really nice from an architectural point of view, since development and maintenance are much easier, there is flexibility to change and adopt, domain knowledge is easier to be grasped by new people in teams and many more. But these perks come with a price.</p>
<p>The bad part of microservice architecture according to our experience is deployment, monitoring and testing. There are many pieces which are harder to monitor and deploy, since applications consist of many small services, which have integration points, so conventional testing is not enough.</p>
<p>In this blog post, we will try to concentrate on testing and monitoring aspect, especially blackbox testing as health check whether the system is doing fine. We will explain why convenient unit and integration testing alone won’t be enough, explain blackbox testing as a concept and give all prerequisites which should be done in order to achieve successful blackbox testing and monitoring. </p>
<h3>Types of tests</h3>
<p>In general, when it comes to testing levels, we have unit testing, integration testing, component interface testing and system testing. Unit testing is simply a must, it is the verification that even a smallest piece of code works, and developers gain comfort that the code they produce works as designed alone in isolation. Integration test, on the other hand, should verify that class or piece of code works well with other pieces in the application. Those two levels are widespread and every developer should be familiar with them.  </p>
<p>As the system grows in complexity, other two levels start to become more and more important. Component interface testing verifies that data being passed among components in the system is done right and it verifies application flow, apart from simple integration between components. Usually, here the business flow is tested across different components in the system. <strong>Blackbox testing</strong> is a type of component interface testing.</p>
<p>At the highest level, we have system testing, which usually verifies non-functional requirements of a system. Each system has them, and we must be sure that the system can support that many users, fail of certain amount of nodes, certain latency etc. For these types of tests, the companies usually build software which deliberately simulate this type of environment and monitor how the system reacts. A good example is netflix Simian Army which is a group of system tests whose goal is to destroy nodes, data centers, regions, add artificial latency and test system performance.</p>
<h3>Blackbox testing for microservices</h3>
<p>Blackbox testing is a perfect fit for microservices. We try to divide the application into many single purpose modules, and usual business flow needs to touch at least a couple of them to finish the task. We need to be sure that those business flows work as expected. In our application we used spring boot for microservice configuration and spring retry mechanism to orchestrate test execution. There is a problem with latency and async execution of certain parts of the system and retry mechanism with pause in between is a great way to be sure that you have provided enough time for your test to be completed successfully. </p>
<p>We had a couple of prerequisites in order to perform blackbox tests successfully. The first thing that needed to be done was creating a http client, since we needed to trigger our flow and communicate with our tests programmatically. We used jersey http client for that. Then we needed a way to generate data for our tests, so we created microservice whose sole purpose was to generate near production data using a http client. We needed to setup the monitoring and scheduling of those tests, so we configured the main test scheduler to run all tests for 10 minutes each. We saved only the results of the latest run (for now, later we might save all runs so we can audit) and showed results over http in form of json report. This way we can later integrate GUI for monitoring and we can query results with http request.</p>
<p>After all this setup, we isolated business flow in our application which was critical to customers and for which we had to be sure that it worked properly. Basically, we have a batch job which is used for import, it starts with ftp file upload, parses that file, generates request to other microservice, and that microservice stores data to DB.  So, here we are testing ftp server microservice, batch microservice, oauth server, gateway server and application which store data. Cleanup is done on the end. What is most important, and where retry mechanism comes as helpful, is the part when you are waiting for the result to be stored. We started with ftp upload and since it can take some time to store data, we needed a mechanism to wait (we did not want to use Thread.sleep) so we created retry with a 30 second pause and maximum 5 attempts to read data, which gave us a lot of window to verify and make sure this flow works. </p>
<p>As for monitoring, if the test fails we place a notification in message queue which can be consumed with anything (currently there is a small service which sends SMS after X failures) and we have integration with rollbar which provides a nice overview of all failures.</p>
<h3>Conclusion</h3>
<p>Microservice architecture is great for flexibility, it enables you to change small parts of a system without too much risk. Also, it is great for maintenance since parts of a system can be maintained by small teams, which are familiar with all internals of that part down to the smallest details. It is also great for scaling, if there is a bottleneck in some part you can multiply servers. But the problem arises from testing, monitoring and debugging since there are many more components which can produce errors. With that big systems, you must remain in control and the only way to achieve that is through constant tests and good monitoring tools. Blackbox testing with notifications on failure provides that possibility for important business flows.</p>]]></rteContent>
          <author><![CDATA[1095]]></author>
          <blogTitle><![CDATA[Blackbox testing microservices]]></blogTitle>
          <postDate>2015-07-08T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1189" parentID="1181" level="4" creatorID="0" sortOrder="13" createDate="2015-09-16T01:04:17" updateDate="2015-09-19T12:37:02" nodeName="Why go distributed" urlName="why-go-distributed" path="-1,1255,1057,1181,1189" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Why go distributed]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1058/why-go-distributed_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.10518834399431415,
        "y1": 0,
        "x2": 0.25515280739161333,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>Why go distributed? When talking to other fellow engineers and people in our industry this question appears inevitably. We have had a single instance application for decades and there have been no problems. Scaling was done by adding another server behind a router and databases would be deployed on SAN for disk drive failure protection and that’s it. It has been doing the job for years, so why change now?</p>
<p>Let’s start from the beginning. The number of people in the world hasn’t grown drastically in the past two or three decades, but the number of people connected to the internet has, but that is not the fact that has had the greatest impact. What really changed is the number of devices. A few years ago every third person had a device capable of collecting and sending any kind of data to some service. Now we have at least three of these devices per person. Smartphones are one of the biggest sources of data out there. Each phone generates huge amounts of data and at this point there are around 6 billion of smartphones online. But that’s not all. Today we have smart watches, smart freezers, smart tvs, even the cars are smart. Everything around us is either already connected to the internet or is going to be in the next few years. Don’t get me wrong, I really think that’s an awesome thing. There are quite a few discussions about personal data and privacy and how this will all make it easy for hackers to get our information and gain control over our lives, but looking at the bright side, we will have so much more information to help us improve our everyday life. With so much data going “through the wire” we can run all kinds of analysis and get incredible answers.</p>
<p>Now, looking at the question about distributed systems we started with, the answer is shaping up. There is no way a single computer or multiple instances of one can handle and store even a fraction of this huge data flow and execute complex algorithms and maybe even learn along the way. Distributed systems are created out of need and today's technologies are getting better and better at being distributed. When speaking about hardware itself, today we have multicore servers and hundreds of megabytes of ram and a couple of terabytes of storage and it's really amazing, but the problem is that, in today's big data world, we could easily need thousands of cpu cores, terabytes of ram and even petabytes of storage space. This is not something that can be solved by a single server or even multiple instances of it. The solution lies in distributing this data across multiple machines that work in a coordinated system. There is a great line from Randy Shoup from eBay: “If you can’t split it, you can’t scale it”.</p>
<p>There are two types of distributed systems by architecture. The first and easier one is master slave configuration and the second one is masterless. In a master slave architecture, there is one computer in the system that executes administrative tasks and coordinates the other computers in the system. This is relatively easy to implement because all the synchronization is centralized and all participants get orders from and report to one leader. The downside is that this is a single point of failure in the system which is supposed to help us solve this issue. There are some mechanisms that overcome this problem like having a spare master with data replication or all the participants in the system voting for one of them to become the new master.</p>
<p>In a masterless architecture all the participants are equal and they communicate to all other participants in the system. This leads to easier failure tolerance implementation since nothing is shared but the downside is keeping everything in sync and timely recognition of failures. There is no master to keep an eye on everything so the participants need to talk to each other a lot. Working with both types of systems from a developer's standpoint are both hard to start with. There is so much going on and it’s hard to debug problems on a single computer, not to mention three or more.</p>
<p>The easiest way to start with development is by setting up a cluster of 3 of each components in the system. This shouldn’t be a problem with tools that are available today like ansible, vagrant, docker or others. By creating a distributed development environment, it’s much easier to understand how it all works and problems with certain approaches become visible in early phases. The worst thing you can have is simple bugs wreaking havoc on deployed system which you could easily pinpoint and solve during development. This is especially important for masterless distributed systems with loose consistency.</p>
<p>The second most important thing is logging. People developing software usually tend to start with development and then add logging along the way or as it becomes necessary. It should be a good practice for any type of development to set up proper logging first, as it’s always hard to add it later. Also, it is a good idea to use one of the online logging services like loggly or rollbar because it’s easy to setup and monitor and makes life much easier.</p>
<p>Distributed systems are a great representative of “everything comes at a price”. They solve a lot of impossible cases for a traditional system and bring a lot of gains but at the same time they introduce problems of their own. If you understand what you are doing and setup all the tools and logging properly there is nothing to be afraid of.</p>]]></rteContent>
          <author><![CDATA[1092]]></author>
          <blogTitle><![CDATA[Why go distributed]]></blogTitle>
          <postDate>2015-06-28T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1192" parentID="1181" level="4" creatorID="0" sortOrder="14" createDate="2015-09-16T01:06:50" updateDate="2015-09-19T12:37:02" nodeName="Why Big Data" urlName="why-big-data" path="-1,1255,1057,1181,1192" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Why Big Data]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1060/why-big-data_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.36034115138592748,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>We wanted to share why we want to do what we do and why we think this is the future of IT. The number of internet users is constantly growing (3.17 billion up from 2.94 billion last year) and what strikes us even more is the fact that 90% of all data in the world today has been created in the last 2 years only. IoT made the use of data open to everyone, and now there is every little thing built with sensor and sending information. Social network boom made every single application or business stakeholder eager to go viral, and the volume of shared data increases with viral marketing.</p>
<p>However, Big Data is more than just data itself. It is a combination of factors that require a new way of collecting, analyzing, visualizing and sharing data. These factors are forcing software companies to re-think the ways in which they manage and offer their data, from new insights to completely new revenue streams. <strong> Bringing right information at the right time to business decision makers is what counts.</strong></p>
<p><img style="width: 275px; height: 188px; display: block; margin-left: auto; margin-right: auto;" src="/media/1059/why-big-data.png?width=275&amp;height=188" alt="" rel="1191" /></p>
<p>There is a nice pyramid which explains the process of collecting data, analysing it and pulling some meaningful facts out of data sets which improve business. During the first stage, business owners are aware that they have big data sets which they are <strong>collecting</strong>, but do not have a clear idea what to do with that information. Here, the challenge is on engineers to build a good architecture which can facilitate 3Vs of big data, velocity, variety and volume. When dealing with big data systems, complexity arises usually from system distribution (many application servers, database servers, microservices etc.). After this phase, when systems keep collecting data for some time, data scientists usually kick in to <strong>analyze</strong> those data sets and figure out the repeated patterns and are important to business owners. The output of this phase is either a report, idea or algorithm which can provide answers to some questions about business which owners are interested in (what products are bought most often on which day, when to do promotions, how to keep orders from distribution centers at a minimum level but hit customer needs). At this point data becomes knowledge. In the last stage after business owners obtain their answers, <strong>prediction</strong> needs to be incorporated to existing software. During that phase, both data scientists and engineers work together to build better software which can alert, learn from patterns, improve processes, visualize and give even more insight. This phase is transforming knowledge into wisdom.</p>
<p>From technical perspective, industry is changing a lot. NoSQL databases are not premature anymore, there are systems with multiple storages where relational databases are used for relational stuff in combination with NoSQL (i.e. cassandra for time series data, redis for session, mongo for document storage). Microservices provide an answer for the huge complexity of monolithic systems but incur large costs of maintenance, monitoring, deployment etc.. Devops have become a must, and every developer must know operational stuff. Messaging systems have become popular as a way of communication between many small services. Everything is asynchronous and non-blocking. Because there is a huge volume of data which needs processing, the speed of processing and delay when getting results has become important. The Hadoop way of batch processing is not enough anymore, near real time processing is in demand. Providing both fast and slow but more accurate processing (as lambda architecture is proposing) is something to strive towards. Apache Spark has become a huge player in the field of batch processing because it provides both batch and stream processing.</p>
<p>We have realized that industry is changing and we didn’t want to be just a part of that change but  to actively influence the changes through consultation service and our ideas. In order to do that, we must constantly challenge ourselves and that is in the DNA of our company. We like exploring new technologies, we do our homework, research when we have a problem and choose the best tool for the job and learn the good parts from technologies we are not familiar with so we can use them in technologies we are familiar with. Open source is another thing in the DNA of our company. For a long time we have been searching for answers on StackOverflow, waiting for the jira issue to be solved by someone in order to use something the way we wanted, looked at someone else's GitHub example to find the solution we need. We want to give back to the community, to provide answers, patch bugs and issues in technologies in which we believe, provide examples and ideas for some solutions we have come to, fire up discussions based on those ideas and solutions so we can provide even better solutions. </p>]]></rteContent>
          <author><![CDATA[1092]]></author>
          <blogTitle><![CDATA[Why Big Data]]></blogTitle>
          <postDate>2015-05-18T00:00:00</postDate>
        </BlogPost>
        <BlogPost id="1193" parentID="1181" level="4" creatorID="0" sortOrder="15" createDate="2015-09-16T01:08:18" updateDate="2015-09-19T12:37:02" nodeName="Craft conference 2015" urlName="craft-conference-2015" path="-1,1255,1057,1181,1193" isDoc="" nodeType="1180" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1194" nodeTypeAlias="BlogPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Craft conference 2015]]></title>
          <headerImage><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1061/craft-conference_detailed.jpg",
  "crops": [
    {
      "alias": "header",
      "width": 938,
      "height": 600,
      "coordinates": {
        "x1": 0,
        "y1": 0,
        "x2": 0,
        "y2": 0
      }
    },
    {
      "alias": "box",
      "width": 511,
      "height": 511,
      "coordinates": {
        "x1": 0.16773276474769011,
        "y1": 0,
        "x2": 0.19260838663823737,
        "y2": 0
      }
    }
  ]
}]]></headerImage>
          <rteContent><![CDATA[<p>This was our second a craft conference, the place to be if you are connected to IT and want to be a better professional. The main topic of the conference was the art of craftsmanship. It was held in Budapest at a nice venue called Varkert Bazar which is right below the fortress at the bank of the Danube river, which made coffee breaks feel nice and cozy. </p>
<p>There were 4 tracks, one in an actual tent within the fortress and other in a garage (parking garage adapted for conference talks) on lazy bags. Buzzwords from mostly all talks were microservices, distributed systems, functional programming, big data. Here are some talks which we found to be the most interesting.</p>
<h3>Scaling Micro-Services at Gilt - Adrian Trenaman</h3>
<p>Glit is a high volume traffic website in USA which has loads in peaks (the promotion is at 12 o'clock so load is expected at that time). The talk was about explaining how they had turned from a huge monolith (ruby on rails + postgresql) to microservice architecture with hundreds of microservices. During their transition period, they built microservices on top of the existing service layer and migrated functionalists gradually until they migrated all and they could replace the old service layer with new microservice. They also talked about testing, and why it had been hard and expensive to have a staging environment. They are performing testing in production, they have microservice both in frontend and backend so when a new feature is developed it is deployed on one application server but it is not visible. Testers know how to navigate to a hidden functionality and test it and when they are confident it is working, they deploy it on other servers with visibility to customers. Here is a <a href="http://www.ustream.tv/recorded/61442163" target="_blank">video</a>.</p>
<h3>Building Reliable Distributed Data Systems - Jeremy Edberg (Netflix)</h3>
<p>This talk was mainly interesting because of the mentioned tools that are in use in  netflix. The talk also put an emphasis on problems with good monitoring,  <a href="https://github.com/Netflix/Hystrix" target="_blank">Hystrix</a> is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, it has nice monitoring capabilities which can be checked in screenshots. <a href="https://github.com/Netflix/SimianArmy" target="_blank">Simian Army</a> represents tools for keeping your cloud operating in top form. Chaos Monkey is a resiliency tool that helps applications tolerate random instance failures. They have tools which randomly destroy nodes, servers and data centers and you can test how your application would react. There is also latency monkey which adds artificial latency to endpoint to simulate load. Here is a <a href="http://www.ustream.tv/recorded/61446224" target="_blank">video</a>.</p>
<h3>NoSQL Key Value Stores - the Key to Velocity - Peter Milne (Aerospike)</h3>
<p>We did not attend this talk but we spoke with them at company booth. AerospikeDB is a pretty fresh DB on the horizon, they are of course advertised as cassandra killer, just like cassandra was a mongo DB killer. This DB is definitely something worth checking out. It is fast, keeps data in memory (has an option to save to data stores in hybrid mode), data is processed on nodes so you can do aggregations and filtering directly on nodes. This accelerates some application filtering since it filters data on each node and aggregates results when returning to application. We are planning to watch this talk to catch more insight, here is a <a href="http://www.ustream.tv/recorded/61448813" target="_blank">video</a>.</p>
<h3>Using Logs To Build a Solid Data Infrastructure - Martin Kleppmann (Linkedin)</h3>
<p>A great talk putting emphasis on why you should use append only logs and how you can benefit from them. Essentially, the idea is to place all messages in logs which are append only, and not to mutate data. The log is re-playable, everyone can subscribe to read from it and use that information to sync data. Martin provided an example of how to keep data in DB and elasticsearch without thinking of sync issues. Basically there is a log in which data is written and two workers save that data, one in DB and one indexed in elasticsearch. He talked a lot about <a href="http://kafka.apache.org/" target="_blank">Apache Kafka</a> project, which is a distributed messaging broker built on top of distributed log idea. The nice thing about it is that you can mirror logs, it saves messages on disks, replays the whole log history from disks (so when you add new data source you can replay messages and have the whole history in the new data source). Kafka also enables a lot of prototyping and ideas to be tested, you just mirror your log, attach new subscriber which will, for example, write to elasticsearch and you test against it, if it is ok, use it, if not, just drop the mirror of queues. Here is a <a href="http://www.ustream.tv/recorded/61479591" target="_blank">video</a>. Logical next step was the following talk <strong>How Do You Scale a Logging - Paul Stack (OpenTable)</strong> which also talked about kafka, mistakes they had made and some of take-aways from those mistakes, so you might watch that <a href="http://www.ustream.tv/recorded/61484961" target="_blank">video</a> as well, not that good as Martin Kleppmann but good for kafka experience.</p>
<h3>Microservice AntiPatterns - Tammer Saleh (Pivotal)</h3>
<p>The last talk we would recommend, Tammer from pivotal, provided a nice overview of <strong>10 things that hurt when you do microservice architecture</strong>, and how to solve them (at least from his perspective). One of the things we liked from this talk is the explanation how to develop server and client at same time. The basic idea is to create an integration client (http client) with all endpoints calls for each language which you plan to support. This is like a contract, which has mock mode and from that point on, both client and server sides can be developed. Client can test and develop against contract (mock response) and server side must be developed to adhere to contract. When server side is ready, mock mode is switched to real mode. This way you can speed up development and provide sort of documentation right away. Here is a <a href="http://www.ustream.tv/recorded/61486500" target="_blank">video</a>.</p>
<h3>Food for thought</h3>
<p>Microservice architecture is definitely the way to go forward but it is accompanied with its problems (monitoring, testing, deployment). Big data is the next big thing, systems should be built with that in mind (a rule of thumb is <strong>always build for 3</strong>, meaning 3 application servers, 3 nodes, etc.).  Scalability and fault tolerance is a new norm and each system must have the ability to grow and must be resilient to errors</p>
<p>In relation to craftsmanship, the speakers reflected on the topic of learning, how hard it is to cope with technology and be good in all things required within a project. In the past, we had only a couple of tools, frameworks, languages which had to be understood in order to do your job well and to finish projects. Now, microservice architecture has enabled an easy usage of different DB, different languages and frameworks, deployment tools, monitoring tools but it is quite hard to follow everything. The idea is to delegate, and implement some sort of microservice architecture in the organization as well. You should have specialized teams in your organization, know just enough to delegate and to manage to remain on top level but provide some features to these micro teams (two pizza teams) to work on them from bottom to top independently and give full control to them regarding the technology and tooling choices.</p>]]></rteContent>
          <author><![CDATA[1095]]></author>
          <blogTitle><![CDATA[Craft conference 2015]]></blogTitle>
          <postDate>2015-05-05T00:00:00</postDate>
        </BlogPost>
      </Blog>
      <News id="1197" parentID="1057" level="3" creatorID="0" sortOrder="16" createDate="2015-09-16T22:19:16" updateDate="2015-09-19T12:37:02" nodeName="News" urlName="news" path="-1,1255,1057,1197" isDoc="" nodeType="1195" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1211" nodeTypeAlias="News">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[News]]></title>
        <teamWidget><![CDATA[1098,1095,1092]]></teamWidget>
        <serviceWidget><![CDATA[1081,1082,1083,1084]]></serviceWidget>
        <NewsPost id="1201" parentID="1197" level="4" creatorID="0" sortOrder="4" createDate="2015-09-16T22:22:34" updateDate="2015-09-19T12:37:02" nodeName="Sponsors at Coding Serbia" urlName="sponsors-at-coding-serbia" path="-1,1255,1057,1197,1201" isDoc="" nodeType="1196" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1213" nodeTypeAlias="NewsPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Sponsors at Coding Serbia]]></title>
          <newsTitle><![CDATA[Sponsors at Coding Serbia]]></newsTitle>
          <boxImage>1199</boxImage>
          <headerImage>1200</headerImage>
          <rteContent><![CDATA[<p>We would like to share our excitement with you. This October we will be a part of the 3rd international Coding Serbia conference in Novi Sad as silver sponsors. We have prepared some cool stuff to share with you and of course some surprises to keep you busy and entertained.  </p>
<p>We are so excited about great lectures and people that we will meet soon. Between the lectures we will wait for you at our booth to answer all of your Big Data questions, to hear your ideas and share some knowledge with you.</p>
<p>The conference will last for 2 days and will welcome more than 400 delegates each day. One of the main topics will be Big Data so we know that we will be in the right place, and so will you. See you soon.</p>]]></rteContent>
          <postDate>2015-08-05T00:00:00</postDate>
          <author><![CDATA[1092]]></author>
        </NewsPost>
        <NewsPost id="1204" parentID="1197" level="4" creatorID="0" sortOrder="5" createDate="2015-09-16T22:24:00" updateDate="2015-09-19T12:37:02" nodeName="Cassandra summit 2015" urlName="cassandra-summit-2015" path="-1,1255,1057,1197,1204" isDoc="" nodeType="1196" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1213" nodeTypeAlias="NewsPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[Cassandra summit 2015]]></title>
          <newsTitle><![CDATA[Cassandra summit 2015]]></newsTitle>
          <boxImage>1203</boxImage>
          <headerImage>1202</headerImage>
          <rteContent><![CDATA[<p>We are excited for the upcoming Cassandra Summit in San Francisco, the biggest NoSQL conference in the world and epicenter of Cassandra community. There are a couple of great reasons to be in San Francisco in September, Datastax and Oracle have decided to provide a unique opportunity to get certified on Cassandra, 2 full days of technical conference talks, a lot of interesting people to meet and share experience with, and keynote talk by Jonathan Ellis himself.</p>
<p>Apache Cassandra is still young (released by Facebook in 2008 as open source) but far from being a premature product, and places like this are a great chance to talk about experiences, get new ideas and be better at implementing those ideas on top of this great product. SmartCat has 2 years of experience with Cassandra on products which are in production, so we have decided it is time to step up the game, get certified and use that experience to give back to the community. We  are already up and running and you can check our baby steps on github, which is a small migration tool used for schema and data version migrations.</p>
<p>If you are attending Cassandra Summit this year, look for guys in SmartCat T-Shirts because we are sending two of our core team members, Nenad and Matija, as our representatives this year. See you there!</p>]]></rteContent>
          <postDate>2015-07-30T00:00:00</postDate>
          <author><![CDATA[1095]]></author>
        </NewsPost>
        <NewsPost id="1207" parentID="1197" level="4" creatorID="0" sortOrder="6" createDate="2015-09-16T22:25:30" updateDate="2015-09-19T12:37:02" nodeName="On this day" urlName="on-this-day" path="-1,1255,1057,1197,1207" isDoc="" nodeType="1196" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1213" nodeTypeAlias="NewsPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[On this day]]></title>
          <newsTitle><![CDATA[On this day]]></newsTitle>
          <boxImage>1206</boxImage>
          <headerImage>1205</headerImage>
          <rteContent><![CDATA[<p>On this day the news that we’ve decided to open our own company may not be interesting or relevant to many of you reading this, however I assure you that this day will be remembered as a start of something great, something inspiring and remarkable.</p>
<p>When you have a group of highly-motivated and determined seniors, with same core values that promote synergy, progress, open-mindedness, positive attitude and passion for learning, when you find the right partners and all the experiences behind you start connecting, like dots in a graph, same way stars connect to form constellations, the excitement is undeniable. You are certain this is your calling, this is your destiny, and great things are in front of us.</p>
<p>The concept of Big Data has intrigued us from the very first online articles describing this new frontier of technology, back in 2007. Imagine if we could know all there is to know about a particular problem or a situation at the time when we need to make a decision, imagine a world with no assumptions, just facts. Imagine the efficiency we could achieve, imagine the comfort of predictability. Imagine the responsiveness that is always real-time... Some may say it’s scary, but a fear of the unknown is an elemental part of progress.</p>
<p>This is why we, all three of us founders, have spent considerable portion of our career studying this new frontier of computer science. From trying out different technologies to studying various use cases and implementing production-ready systems, each one of us has focused on this emerging field independently. We’ve now come together bound by the same ideals, a shared childhood bond, and same dedication to be the best at what we do and do it in an innovative way.</p>
<p>Now it’s our time to show the world what we can do. So, let’s start with a simple message...</p>
<p>"Hello, world!" :)</p>]]></rteContent>
          <postDate>2015-03-09T00:00:00</postDate>
          <author><![CDATA[1098]]></author>
        </NewsPost>
        <NewsPost id="1209" parentID="1197" level="4" creatorID="0" sortOrder="7" createDate="2015-09-16T22:35:57" updateDate="2015-09-19T12:37:02" nodeName="We're Getting Certified!" urlName="were-getting-certified" path="-1,1255,1057,1197,1209" isDoc="" nodeType="1196" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1213" nodeTypeAlias="NewsPost">
          <umbracoNaviHide>0</umbracoNaviHide>
          <title><![CDATA[We're Getting Certified!]]></title>
          <newsTitle><![CDATA[We're Getting Certified!]]></newsTitle>
          <boxImage>1203</boxImage>
          <headerImage>1208</headerImage>
          <rteContent><![CDATA[<p>We are pleased to announce that SmartCat will be one of the first companies in the world to become officially Cassandra Certified experts and service providers. At the Cassandra Summit in San Francisco this September, will be the first chance to obtain this certificate which warrants quality of service. Guess who’s going there!? Our core technical people are! It’s time we put a stamp on all the experience we’ve gathered working with Cassandra over the past few years.</p>
<p>Although some people may say "it's just a paper", we are proud of all of our "papers". We at SmartCat have a merit-based value system and we believe in "walking the talk". The results talk for themselves, same way that actions speak louder than words. Our knowledge-sharing culture inspires our employees and keeps us all advancing, and we are proud to say that we are Cassandra Certified. In the end, what is a certificate if not a structured version of a shared and gathered knowledge that has been proven in the field!? Yeah, so, for all the skeptics out there we say: "you're just jealous".</p>
<p>San Francisco, here we come!</p>
<p>      </p>]]></rteContent>
          <postDate>2015-07-26T00:00:00</postDate>
          <author><![CDATA[1092]]></author>
        </NewsPost>
      </News>
      <Error404 id="1216" parentID="1057" level="3" creatorID="0" sortOrder="17" createDate="2015-09-16T23:33:37" updateDate="2015-09-19T12:37:02" nodeName="Error 404" urlName="error-404" path="-1,1255,1057,1216" isDoc="" nodeType="1215" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1214" nodeTypeAlias="Error404">
        <umbracoNaviHide>1</umbracoNaviHide>
        <title><![CDATA[Page not found]]></title>
        <rteContent><![CDATA[<h3>Page not found</h3>
<p>This might be because:</p>
<ul class="bulleted-list">
<li>You have typed the web address incorrectly </li>
<li>The page you were looking for may have been moved, updated or deleted</li>
</ul>
<p> </p>
<p>Please try the following options instead:</p>
<ul class="bulleted-list">
<li>Use our search above to find what you are looking for </li>
<li>Go to our <a href="/">homepage</a></li>
</ul>]]></rteContent>
      </Error404>
      <Search id="1223" parentID="1057" level="3" creatorID="0" sortOrder="18" createDate="2015-09-17T20:12:02" updateDate="2015-09-19T12:37:02" nodeName="Search" urlName="search" path="-1,1255,1057,1223" isDoc="" nodeType="1222" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1224" nodeTypeAlias="Search">
        <umbracoNaviHide>1</umbracoNaviHide>
        <title><![CDATA[Search results]]></title>
      </Search>
      <TestimonialContainer id="1233" parentID="1057" level="3" creatorID="0" sortOrder="19" createDate="2015-09-19T00:11:19" updateDate="2015-09-19T12:37:02" nodeName="Testimonials" urlName="testimonials" path="-1,1255,1057,1233" isDoc="" nodeType="1231" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialContainer">
        <TestimonialItem id="1235" parentID="1233" level="4" creatorID="0" sortOrder="7" createDate="2015-09-19T00:17:01" updateDate="2015-09-19T12:37:03" nodeName="Peter Sondergaard" urlName="peter-sondergaard" path="-1,1255,1057,1233,1235" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[Information is the oil of the 21st century, and analytics is the combustion engine.]]></testimonialText>
          <testimonialAuthor><![CDATA[Peter Sondergaard]]></testimonialAuthor>
        </TestimonialItem>
        <TestimonialItem id="1236" parentID="1233" level="4" creatorID="0" sortOrder="8" createDate="2015-09-19T00:17:18" updateDate="2015-09-19T12:37:03" nodeName="Leonardo da Vinci" urlName="leonardo-da-vinci" path="-1,1255,1057,1233,1236" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[All our knowledge has its origins in our perceptions]]></testimonialText>
          <testimonialAuthor><![CDATA[Leonardo da Vinci]]></testimonialAuthor>
        </TestimonialItem>
        <TestimonialItem id="1237" parentID="1233" level="4" creatorID="0" sortOrder="9" createDate="2015-09-19T00:17:35" updateDate="2015-09-19T12:37:03" nodeName="Daniel Keys Moran" urlName="daniel-keys-moran" path="-1,1255,1057,1233,1237" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[You can have data without information, but you cannot have information without data.]]></testimonialText>
          <testimonialAuthor><![CDATA[Daniel Keys Moran]]></testimonialAuthor>
        </TestimonialItem>
        <TestimonialItem id="1238" parentID="1233" level="4" creatorID="0" sortOrder="10" createDate="2015-09-19T00:17:48" updateDate="2015-09-19T12:37:03" nodeName="Geoffrey Moore" urlName="geoffrey-moore" path="-1,1255,1057,1233,1238" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[Without big data, you are blind and deaf in the middle of a freeway]]></testimonialText>
          <testimonialAuthor><![CDATA[Geoffrey Moore]]></testimonialAuthor>
        </TestimonialItem>
        <TestimonialItem id="1239" parentID="1233" level="4" creatorID="0" sortOrder="11" createDate="2015-09-19T00:18:02" updateDate="2015-09-19T12:37:03" nodeName="Peter Sondergaard (1)" urlName="peter-sondergaard-1" path="-1,1255,1057,1233,1239" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[Information is the oil of the 21st century, and analytics is the combustion engine.]]></testimonialText>
          <testimonialAuthor><![CDATA[Peter Sondergaard]]></testimonialAuthor>
        </TestimonialItem>
        <TestimonialItem id="1240" parentID="1233" level="4" creatorID="0" sortOrder="12" createDate="2015-09-19T00:18:20" updateDate="2015-09-19T12:37:03" nodeName="Marilyn vos Savant" urlName="marilyn-vos-savant" path="-1,1255,1057,1233,1240" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[To acquire knowledge, one must study; but to acquire wisdom, one must observe.]]></testimonialText>
          <testimonialAuthor><![CDATA[Marilyn vos Savant]]></testimonialAuthor>
        </TestimonialItem>
        <TestimonialItem id="1241" parentID="1233" level="4" creatorID="0" sortOrder="13" createDate="2015-09-19T00:18:34" updateDate="2015-09-19T12:37:03" nodeName="Francis Bacon" urlName="francis-bacon" path="-1,1255,1057,1233,1241" isDoc="" nodeType="1232" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="TestimonialItem">
          <testimonialText><![CDATA[Knowledge is power.]]></testimonialText>
          <testimonialAuthor><![CDATA[Francis Bacon]]></testimonialAuthor>
        </TestimonialItem>
      </TestimonialContainer>
      <PartnersContainer id="1244" parentID="1057" level="3" creatorID="0" sortOrder="20" createDate="2015-09-19T00:38:31" updateDate="2015-09-19T12:37:03" nodeName="Partner network" urlName="partner-network" path="-1,1255,1057,1244" isDoc="" nodeType="1243" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="PartnersContainer">
        <PartnerItem id="1247" parentID="1244" level="4" creatorID="0" sortOrder="2" createDate="2015-09-19T00:46:32" updateDate="2015-09-19T12:37:03" nodeName="Vega IT Sourcing" urlName="vega-it-sourcing" path="-1,1255,1057,1244,1247" isDoc="" nodeType="1242" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="PartnerItem">
          <partnerImage>1246</partnerImage>
          <partnerUrl><![CDATA[[
  {
    "name": "VegaITSourcing",
    "url": "https://www.vegaitsourcing.rs",
    "target": "_blank",
    "icon": "icon-link"
  }
]]]></partnerUrl>
        </PartnerItem>
        <PartnerItem id="1249" parentID="1244" level="4" creatorID="0" sortOrder="3" createDate="2015-09-19T00:47:42" updateDate="2015-09-19T12:37:03" nodeName="Elder" urlName="elder" path="-1,1255,1057,1244,1249" isDoc="" nodeType="1242" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="PartnerItem">
          <partnerImage>1248</partnerImage>
          <partnerUrl><![CDATA[[
  {
    "name": "Elder",
    "url": "http://weareelder.com",
    "target": "_blank",
    "icon": "icon-link"
  }
]]]></partnerUrl>
        </PartnerItem>
      </PartnersContainer>
      <Contact id="1253" parentID="1057" level="3" creatorID="0" sortOrder="21" createDate="2015-09-19T01:23:32" updateDate="2015-09-19T23:37:38" nodeName="Contact" urlName="contact" path="-1,1255,1057,1253" isDoc="" nodeType="1252" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="1251" nodeTypeAlias="Contact">
        <umbracoNaviHide>0</umbracoNaviHide>
        <title><![CDATA[Contact]]></title>
        <officeEmail><![CDATA[admin@smartcat.local]]></officeEmail>
        <successfullyEmailMessage><![CDATA[Thank you, we have received your message.]]></successfullyEmailMessage>
        <failedEmailMessage><![CDATA[Sorry, there was an error sending your message, please try again.]]></failedEmailMessage>
        <messageTemplate><![CDATA[From: {senderName}
Email: {senderEmail}

Title: {subject}

Message: {message}]]></messageTemplate>
      </Contact>
    </Home>
    <Repository id="1052" parentID="1255" level="2" creatorID="0" sortOrder="2" createDate="2015-09-13T16:23:52" updateDate="2015-09-19T12:40:34" nodeName="Repository" urlName="repository" path="-1,1255,1052" isDoc="" nodeType="1048" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Repository">
      <Header id="1054" parentID="1052" level="3" creatorID="0" sortOrder="3" createDate="2015-09-13T16:28:08" updateDate="2015-09-19T12:40:34" nodeName="Header" urlName="header" path="-1,1255,1052,1054" isDoc="" nodeType="1050" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Header">
        <logoImage>1060</logoImage>
        <telephoneNumber><![CDATA[+381 (0)21 661 65 57]]></telephoneNumber>
        <telephoneNumberHref><![CDATA[+381216616557]]></telephoneNumberHref>
        <gitHub><![CDATA[http://www.github.com]]></gitHub>
        <twitter><![CDATA[http://www.twitter.com]]></twitter>
        <stackoverflow><![CDATA[http://www.stackoverflow.com]]></stackoverflow>
        <linkedIn><![CDATA[http://www.linkedin.com]]></linkedIn>
      </Header>
      <Footer id="1055" parentID="1052" level="3" creatorID="0" sortOrder="4" createDate="2015-09-13T16:28:34" updateDate="2015-09-19T12:40:34" nodeName="Footer" urlName="footer" path="-1,1255,1052,1055" isDoc="" nodeType="1049" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Footer">
        <footerLogoImage>1061</footerLogoImage>
        <copyright><![CDATA[<p> ©SmartCat 2015.All rights reserved. Design by <a href="http://www.weareelder.com" target="_blank">Elder</a></p>]]></copyright>
        <address><![CDATA[Danila Kiša 3V/14, Novi Sad, 21000, Serbia]]></address>
        <telephoneNumber><![CDATA[+381 (0)21 661 65 57]]></telephoneNumber>
        <telephoneNumberHref><![CDATA[+381216616557]]></telephoneNumberHref>
        <email><![CDATA[info@smartcat.io]]></email>
        <introductionText><![CDATA[<h2>Want to work with us?</h2>
<p>Want to see what SmartCat can do for your business? <br /> We can't wait to show you! Provide us your info in the field below.</p>]]></introductionText>
      </Footer>
      <Settings id="1053" parentID="1052" level="3" creatorID="0" sortOrder="5" createDate="2015-09-13T16:27:09" updateDate="2015-09-19T23:28:26" nodeName="Settings" urlName="settings" path="-1,1255,1052,1053" isDoc="" nodeType="1051" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Settings">
        <header>1054</header>
        <footer>1055</footer>
        <home>1057</home>
        <search>1223</search>
        <contact>1253</contact>
        <googleAnalyticsScript><![CDATA[<script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-66387264-1', 'auto');
        ga('send', 'pageview');
    </script>]]></googleAnalyticsScript>
      </Settings>
    </Repository>
  </Language>
  <Language id="1256" parentID="-1" level="1" creatorID="0" sortOrder="1" createDate="2015-09-19T12:42:24" updateDate="2015-09-19T12:42:24" nodeName="nl" urlName="nl" path="-1,1256" isDoc="" nodeType="1254" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Language">
    <Repository id="1328" parentID="1256" level="2" creatorID="0" sortOrder="1" createDate="2015-09-19T12:49:55" updateDate="2015-09-19T14:16:49" nodeName="Repository" urlName="repository" path="-1,1256,1328" isDoc="" nodeType="1048" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Repository">
      <Header id="1329" parentID="1328" level="3" creatorID="0" sortOrder="0" createDate="2015-09-19T12:49:55" updateDate="2015-09-19T14:17:04" nodeName="Header" urlName="header" path="-1,1256,1328,1329" isDoc="" nodeType="1050" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Header">
        <logoImage>1060</logoImage>
        <telephoneNumber><![CDATA[+381 (0)21 661 65 57]]></telephoneNumber>
        <telephoneNumberHref><![CDATA[+381216616557]]></telephoneNumberHref>
        <gitHub><![CDATA[http://www.github.com]]></gitHub>
        <twitter><![CDATA[http://www.twitter.com]]></twitter>
        <stackoverflow><![CDATA[http://www.stackoverflow.com]]></stackoverflow>
        <linkedIn><![CDATA[http://www.linkedin.com]]></linkedIn>
      </Header>
      <Footer id="1330" parentID="1328" level="3" creatorID="0" sortOrder="1" createDate="2015-09-19T12:49:56" updateDate="2015-09-19T14:17:01" nodeName="Footer" urlName="footer" path="-1,1256,1328,1330" isDoc="" nodeType="1049" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Footer">
        <footerLogoImage>1061</footerLogoImage>
        <copyright><![CDATA[<p> ©SmartCat 2015.All rights reserved. Design by <a href="http://www.weareelder.com" target="_blank">Elder</a></p>]]></copyright>
        <address><![CDATA[Danila Kiša 3V/14, Novi Sad, 21000, Serbia]]></address>
        <telephoneNumber><![CDATA[+381 (0)21 661 65 57]]></telephoneNumber>
        <telephoneNumberHref><![CDATA[+381216616557]]></telephoneNumberHref>
        <email><![CDATA[info@smartcat.io]]></email>
        <introductionText><![CDATA[<h2>Want to work with us?</h2>
<p>Want to see what SmartCat can do for your business? <br /> We can't wait to show you! Provide us your info in the field below.</p>]]></introductionText>
      </Footer>
      <Settings id="1331" parentID="1328" level="3" creatorID="0" sortOrder="2" createDate="2015-09-19T12:49:56" updateDate="2015-09-19T23:28:41" nodeName="Settings" urlName="settings" path="-1,1256,1328,1331" isDoc="" nodeType="1051" creatorName="SmartCat" writerName="SmartCat" writerID="0" template="0" nodeTypeAlias="Settings">
        <header>1329</header>
        <footer>1330</footer>
        <home>1257</home>
        <search>1315</search>
        <contact>1327</contact>
        <googleAnalyticsScript><![CDATA[<script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-66387264-1', 'auto');
        ga('send', 'pageview');
    </script>]]></googleAnalyticsScript>
      </Settings>
    </Repository>
  </Language>
</root>