@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using SmartCat.Business.Helpers;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Technologies>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;
    ViewBag.HeadSectionTitle = Model.Name;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}

<div class="wrapper">
    <div class="main">
        <div class="swiper-container">
            <ul class="one-half-list swiper-wrapper">

                @{
                    var technologyItems = ContentHelper.GetChildren<TechnologyItem>(Model.Id).ToList();
                }

                @if (technologyItems != null && technologyItems.Any())
                {
                    foreach (var technology in technologyItems)
                    {
                        <li class="swiper-slide">
                            <div class="box">
                                <div class="img-wrap">
                                    @if (technology.TechnologyImage.HasValue)
                                    { 
                                       <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(technology.TechnologyImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(technology.TechnologyImage.Value))" class="greyscale" />
                                    }
                                    
                                </div>
                                <div class="contact-box hidden-on-mobile">
                                        @{
                                            var typedTeamMember = ContentHelper.GetByNodeId<TeamMember>(technology.MemberContact.Value);
                                        }
                                        <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedTeamMember.TechnologyImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(typedTeamMember.TechnologyImage.Value))" />
                                    
                                    <span>Have questions?</span>
                                    <a href="mailto: @typedTeamMember.EmailAddress">Contact @typedTeamMember.FirstName</a>

                                </div>
                            </div>
                            <div class="text">
                                <p>
                                    @technology.TechnologyDescription
                                </p>
                                <div class="contact-box">
                                    <span>Have questions?</span>
                                    <a href="mailto: @typedTeamMember.EmailAddress">Contact @typedTeamMember.FirstName</a>
                                </div>
                            </div>
                        </li>
                    }
                }
-
            </ul>
            <div class="swiper-pagination show-on-mobile"></div>
        </div>
        <div class="certificate-block hidden-on-mobile">
            <span>Associations / Certificates</span>

            @{
                var certificateContainer = ContentHelper.GetChildren<CertificateContainer>(Model.Id).FirstOrDefault();
            }

            @if (certificateContainer != null)
            {
                
               var certificateItems = ContentHelper.GetChildren<CertificateItem>(certificateContainer.Id).ToList();
                
                if (certificateItems != null && certificateItems.Any())
                {
                    <ul>

                        @foreach (var certificate in certificateItems)
                        {
                            <li>
                                <a href="@certificate.CertificateUrl.Url" target="@certificate.CertificateUrl.Target">
                                   @if(certificate.CertificateImage.HasValue)
                                   { 
                                     <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(certificate.CertificateImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(certificate.CertificateImage.Value))" />
                                   }
                                </a>
                            </li>
                        }

                    </ul>
                }

            }
           
        </div>
    </div>
    <aside class="sidebar">
        @if (Model.NewsWidget != null && Model.NewsWidget.Any())
        {
            <div class="widget slider">
                <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(Model.NewsWidget.First()).ParentId).NiceUrl">What's new</a></h3>
                <div class="flexslider">
                    <ul class="slides">
                        @foreach (var newsId in Model.NewsWidget)
                        {
                            var newsPost = ContentHelper.GetByNodeId<NewsPost>(newsId);

                            <li>
                                <div class="text-item">
                                    <div class="romb badge">
                                        <span class="reset-inner">N.</span>
                                    </div>
                                    <h4><a href="@newsPost.NiceUrl">@newsPost.Name</a></h4>
                                    <p>
                                        @Regex.Replace(newsPost.RteContent, @"<(.|\n)*?>", string.Empty).Substring(0, 160) ...
                                    </p>
                                    @if (newsPost.Author.HasValue)
                                    {
                                        var author = ContentHelper.GetByNodeId<TeamMember>(newsPost.Author.Value);
                                        <span class="author">@author.FirstName @author.LastName</span>
                                    }
                                    <span class="date">@newsPost.PostDate.ToString("MM/dd/yy")</span>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }

        @if (Model.TeamWidget != null && Model.TeamWidget.Any())
        {
            <div class="widget slider">
                <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(Model.TeamWidget.First()).ParentId).NiceUrl">Challengers</a></h3>
                <div class="flexslider challengers">
                    <ul class="slides">

                        @foreach (var memberId in Model.TeamWidget)
                        {
                            var teamMember = ContentHelper.GetByNodeId<TeamMember>(memberId);

                            <li>
                                <div class="inner">
                                    <img src="@Umbraco.TypedContent(memberId).GetCropUrl(SmartCat.Common.Constants.Media.CropNames.ProfileImageAlias, SmartCat.Common.Constants.Media.CropNames.Sidebar)" alt="" />
                                    <div class="author-info">
                                        <h4>@teamMember.FirstName @teamMember.LastName</h4>
                                        <span>@teamMember.WorkPosition</span>
                                    </div>
                                </div>
                            </li>
                        }

                    </ul>
                </div>
            </div>
        }

    </aside>
</div>


@section additionalFooterSection
{

}
