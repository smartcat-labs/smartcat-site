@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using SmartCat.Business.Helpers;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Services>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;
    ViewBag.HeadSectionTitle = Model.Name;
    
    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}


<div class="wrapper">
    <div class="main centered">
        <div class="rte-content">
            @Html.Raw(Model.RteContent)
        </div>

        @{
            var services = ContentHelper.GetChildren<ServiceItem>(Model.Id).ToList();
        }

        @if (services != null && services.Any())
        {
            <ul class="items-list has-hover">
                @foreach (var service in services)
                {
                    <li class="@(services.IndexOf(service) % 2 != 0 ? "right-aligned" : string.Empty)">
                        <div class="img-box">
                            <div class="romb blue-romb">
                                <a href="@service.NiceUrl">
                                @if(service.ServiceImage.HasValue)
                                {
                                    <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(service.ServiceImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(service.ServiceImage.Value))" class="icon-img" />
                                }
                                </a>
                            </div>
                        </div>
                        <div class="text">
                            <h2><a href="@service.NiceUrl">@service.Name</a></h2>
                            <p>
                                <a href="@service.NiceUrl">@Html.Raw(!string.IsNullOrEmpty(service.ServiceContent) ? service.ServiceContent.Substring(0,445) : string.Empty)</a>
                            </p>
                            <a href="@service.NiceUrl" class="read-more-link">Read more <i></i></a>
                        </div>
                    </li>
                }
            </ul>
        }
       
    </div>

    <aside class="sidebar">
        @if (Model.NewsWidget != null && Model.NewsWidget.Any())
        {
            <div class="widget slider">
                <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(Model.NewsWidget.First()).ParentId).NiceUrl">What's new</a></h3>
                <div class="flexslider">
                    <ul class="slides">
                        @foreach (var newsId in Model.NewsWidget)
                        {
                            var newsPost = ContentHelper.GetByNodeId<NewsPost>(newsId);

                            <li>
                                <div class="text-item">
                                    <div class="romb badge">
                                        <span class="reset-inner">N.</span>
                                    </div>
                                    <h4><a href="@newsPost.NiceUrl">@newsPost.Name</a></h4>
                                    <p>
                                        @Regex.Replace(newsPost.RteContent, @"<(.|\n)*?>", string.Empty).Substring(0,160) ...
                                    </p>
                                    @if (newsPost.Author.HasValue)
                                    {
                                       var author = ContentHelper.GetByNodeId<TeamMember>(newsPost.Author.Value);
                                       <span class="author">@author.FirstName @author.LastName</span>
                                    }
                                    <span class="date">@newsPost.PostDate.ToString("MM/dd/yy")</span>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        
        @if (Model.TeamWidget != null && Model.TeamWidget.Any())
        {
            <div class="widget slider">
                <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(Model.TeamWidget.First()).ParentId).NiceUrl">Challengers</a></h3>
                <div class="flexslider challengers">
                    <ul class="slides">

                        @foreach (var memberId in Model.TeamWidget)
                        {
                            var teamMember = ContentHelper.GetByNodeId<TeamMember>(memberId);

                            <li>
                                <div class="inner">
                                    <img src="@Umbraco.TypedContent(memberId).GetCropUrl(SmartCat.Common.Constants.Media.CropNames.ProfileImageAlias, SmartCat.Common.Constants.Media.CropNames.Sidebar)" alt="" />
                                    <div class="author-info">
                                        <h4>@teamMember.FirstName @teamMember.LastName</h4>
                                        <span>@teamMember.WorkPosition</span>
                                    </div>
                                </div>
                            </li>
                        }

                    </ul>
                </div>
            </div>
        }
        
    </aside>
</div>


@section additionalFooterSection
{

}


