@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Blog>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}


<div class="page-title">
    <div class="wrapper">
        <h1>@Model.Name</h1>
    </div>
</div>

<div class="content">

    @{
        var blogPosts = ContentHelper.GetChildren<BlogPost>(Model.Id).ToList();
    }

    @if (blogPosts != null && blogPosts.Any())
    {
       blogPosts = blogPosts.OrderByDescending(x => x.PostDate).ToList();

        <div class="wrapper centered">
            <div class="blog-landing">
                <div class="blog-inner-wrap">

                    @foreach (var post in blogPosts)
                    {
                        var postIndex = blogPosts.IndexOf(post);
                        var postClass = string.Empty;
                        var spanClass = string.Empty;
                        var postClasses = new string[3] { "vertical", "right", "" };

                        switch (postIndex)
                        {
                            case 0:
                                postClass = "stamp";
                                spanClass = "ribbon";
                                break;

                            default:
                                postClass = postClasses.RandomOrder().First();
                                spanClass = "arrow";
                                break;
                        }

                        <div class="item @postClass">
                            <div class="img-wrap">
                                <img src="@Umbraco.TypedContent(post.Id).GetCropUrl(SmartCat.Common.Constants.Media.CropNames.BlogHeaderImageAlias, SmartCat.Common.Constants.Media.CropNames.Box)" alt="" />
                                <span class="color-overlay"></span>
                                <a href="@post.NiceUrl"><span class="blue-overlay"></span></a> 
                                <a href="@post.NiceUrl" class="read-more"><i></i></a>
                                <span class="@spanClass"></span>
                            </div>
                            @if(postClass == "stamp")
                            { 
                                <div class="text hidden-on-mobile">
                                    <h3>@post.BlogTitle</h3>
                                    <span class="date">@post.PostDate.ToString("MM/dd/yy")</span>
                                </div>
                            }
                            <div class="text @(postClass == "stamp" ? "show-on-mobile" : string.Empty)">
                                <span class="date">@post.PostDate.ToString("MM/dd/yy")</span>
                                <h3>
                                    <a href="@post.NiceUrl">@post.BlogTitle</a>
                                </h3>
                                @if(postClass != "stamp")
                                { 
                                    <p>
                                        @Regex.Replace(post.RteContent, @"<(.|\n)*?>", string.Empty).Substring(0, 80) ...
                                    </p>
                                }
                                @{
                                    var postAuthor = post.Author.HasValue ? ContentHelper.GetByNodeId<TeamMember>(post.Author.Value) : null;
                                }
                                @if (postAuthor != null)
                                {
                                    <span class="author">
                                        By @postAuthor.FirstName @postAuthor.LastName
                                    </span>
                                }

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

</div>


@section additionalFooterSection
{
    <script type="text/javascript" src="/scripts/libs/jquery.stylish-select.min.js"></script>
    <script type="text/javascript" src="/scripts/libs/masonry.pkgd.min.js"></script>
    <script type="text/javascript" src="/scripts/pages/blog.js"></script>
}