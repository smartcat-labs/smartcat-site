@using SmartCat.Business.Helpers;
@using SmartCat.Business.Twitter;
@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Home>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{
    
}


<section class="full-width home-banner">
    <div class="wrapper">
        <img src="@(Model.SliderImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(Model.SliderImage.Value)) : string.Empty)" class="main-img" />
        <img src="@(Model.AbstractImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(Model.AbstractImage.Value)) : string.Empty)" alt="" class="lines" />
        <div class="caption">
            <div class="inner">
                @if (!string.IsNullOrEmpty(Model.FeaturedText))
                {
                    @Html.Raw(Model.FeaturedText);
                }
                @if (Model.FeaturedButton != null)
                {
                    <a href="@Model.FeaturedButton.Url" class="btn arrow">
                        <span>@Model.FeaturedButton.Name</span>
                        <i class="ico"></i>
                    </a>
                }
            </div>
        </div>
    </div>
    <div class="bottom">
        <div class="left-box">
            <div class="triangle-box">
                <div class="triangle bottomleft" w="110" h="65"></div>
            </div>
        </div>
        <div class="right-box">
            <div class="triangle-box">
                <div class="triangle bottomright" w="100" h="65"></div>
            </div>
        </div>
        <div class="text-widget">
            <div class="wrapper">
                @{
                    var latestTweets = TwitterHandler.GetLatestTweets(1, 30);
                }

                @if (latestTweets != null && latestTweets.Any())
                {
                    var tweet = latestTweets.First();

                    <div class="twitter-box">
                        <h3>@Umbraco.GetDictionaryValue("Home.LatestTweet")</h3>
                        <p>
                            @Html.Raw(tweet.Text)
                        </p>
                        <span class="author">@TwitterHandler.GetTwitterUsername()</span>
                        <span class="date">@tweet.Date.ToString("MM/dd/yy")</span>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@if (Model.FeaturedServices != null && Model.FeaturedServices.Any())
{
    <section class="full-width what-we-do-block">
        <div class="wrapper centered">
            <h2><i class="ico title-ico hidden-on-mobile"></i>@Umbraco.GetDictionaryValue("Home.WhatWeDo")</h2>
            <div class="swiper-container">
                <div class="swiper-wrapper">

                    @foreach (var serviceId in Model.FeaturedServices)
                    {
                        var typedService = ContentHelper.GetByNodeId<ServiceItem>(serviceId);

                        <div class="one-fourth swiper-slide @(Model.FeaturedServices.IndexOf(serviceId) % 2 != 0 ? "right-aligned" : string.Empty)">
                            <div class="romb-wrap">
                                <div class="top romb">
                                    <div class="box-title">
                                        <h4>@typedService.Name</h4>
                                    </div>
                                    <div class="img-wrap">
                                        <a href="@typedService.NiceUrl"><img src="@(typedService.ServiceImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedService.ServiceImage.Value)) : string.Empty)" alt="@(typedService.ServiceImage.HasValue ? MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(typedService.ServiceImage.Value)) : string.Empty)" class="icon-img" /></a>
                                    </div>
                                </div>
                            </div>
                            <div class="text">
                                <h2><a href="@typedService.NiceUrl">@typedService.Name</a></h2>
                                <p>
                                    @Html.Raw(typedService.ServiceContent != null ? typedService.ServiceContent.Substring(0, 170) + "..." : string.Empty)
                                    <a href="@typedService.NiceUrl" class="ico arrow-more hidden-on-mobile"></a>
                                </p>
                                <a href="@typedService.NiceUrl" class="btn show-on-mobile">@Umbraco.GetDictionaryValue("Common.ReadMore")</a>
                            </div>
                        </div>
                    }

                </div>
                <div class="swiper-pagination show-on-mobile"></div>
            </div>
        </div>
    </section>
}

@if (!string.IsNullOrEmpty(Model.AboutText))
{
    <section class="full-width about-us-block">
        <div class="wrapper centered">
            <h2><i class="ico title-ico hidden-on-mobile"></i>@Umbraco.GetDictionaryValue("Home.AboutUs")</h2>
            <div class="rte-content">
                @Html.Raw(Model.AboutText)
            </div>
            @if (Model.LinkButton != null)
            {
                <a href="@Model.LinkButton.Url" class="btn arrow">
                    <span>@Model.LinkButton.Name</span>
                    <i class="ico"></i>
                </a>
            }
        </div>
    </section>
}

@if (Model.FeaturedProcesses != null && Model.FeaturedProcesses.Any())
{
    <section class="full-width process-block">
        <div class="wrapper centered">
            <h2><i class="ico title-ico hidden-on-mobile"></i>@Umbraco.GetDictionaryValue("Home.OurProcess")</h2>
            <div class="swiper-container">
                <ul class="swiper-wrapper">

                    @foreach (var processId in Model.FeaturedProcesses)
                    {
                        var typedProcess = ContentHelper.GetByNodeId<ProcessItem>(processId);
                        var parentUrl = ContentHelper.GetByNodeId(typedProcess.ParentId).NiceUrl;

                        <li class="swiper-slide">
                            <h3><a href="@parentUrl"><span>01</span>@typedProcess.Name</a></h3>
                            <p>
                                <a href="@parentUrl">
                                    @Html.Raw(typedProcess.ProcessDescription != null ? typedProcess.ProcessDescription.Substring(0,230) + "..." : string.Empty)
                                    <i class="ico arrow-more"></i>
                                </a>
                            </p>
                        </li>

                    }

                </ul>
                <div class="swiper-pagination show-on-mobile"></div>
            </div>
        </div>
    </section>
}

@if (Model.FeaturedNews != null && Model.FeaturedNews.Any())
{
    var parentUrl = ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(Model.FeaturedNews.First()).ParentId).NiceUrl;
    
    <section class="full-width news-block">
        <div class="wrapper">
            <h2>@Umbraco.GetDictionaryValue("Home.WhatIsNew")</h2>
            <a href="@parentUrl" class="btn arrow">
                <span>@Umbraco.GetDictionaryValue("News.AllNews")</span><i class="ico"></i>
            </a>
            <div class="one-three">

                @foreach (var newsId in Model.FeaturedNews)
                {
                    var typedNewsItem = ContentHelper.GetByNodeId<NewsPost>(newsId);

                    <div class="column">
                        <div class="item romb">
                            <div class="top ">
                                <div class="box-title">
                                    <h4>@typedNewsItem.PostDate.ToString("MM/dd/yy")</h4>
                                </div>
                                <a href="@typedNewsItem.NiceUrl" class="img-container">
                                    <img src="@(typedNewsItem.BoxImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedNewsItem.BoxImage.Value)) : string.Empty)" alt="" class="reset-inner" />
                                    <span class="overlay"></span>
                                    <div class="badge-holder">
                                        <span class="reset-inner">N.</span>
                                    </div>
                                </a>
                            </div>
                            <div class="text">
                                <div class="inner reset-inner">
                                    <span class="date">@typedNewsItem.PostDate.ToString("MM/dd/yy")</span>
                                    <h4><a href="@typedNewsItem.NiceUrl">@typedNewsItem.NewsTitle</a></h4>
                                    <p>
                                        @Regex.Replace(typedNewsItem.RteContent, @"<(.|\n)*?>", string.Empty).Substring(0, 160) ...
                                    </p>
                                    @if (typedNewsItem.Author.HasValue)
                                    {
                                        var author = ContentHelper.GetByNodeId<TeamMember>(typedNewsItem.Author.Value);
                                        <span>By @author.FirstName @author.LastName</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </section>
}

@if (Model.FeaturedMembers != null && Model.FeaturedMembers.Any())
{
    <section class="full-width people-slider">
        <div class="wrapper">
            <div class="flexslider">
                <ul class="slides">

                    @foreach (var memeberId in Model.FeaturedMembers)
                    {
                        var typedMember = ContentHelper.GetByNodeId<TeamMember>(memeberId);

                        <li>
                            <div class="left-block">
                                @if(typedMember.HomeImage.HasValue)
                                {
                                    <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedMember.HomeImage.Value))" alt="" />
                                }
                            </div>
                            <div class="right-block">
                                <div class="info">
                                    <h2>@typedMember.FirstName @typedMember.LastName</h2>
                                    <span class="position">@typedMember.WorkPosition</span>
                                    <p>
                                        @typedMember.ShortDescription
                                    </p>
                                    <div class="contact-box">
                                        <a href="mailto: @typedMember.EmailAddress" class="mail">
                                            <i class="ico"></i>
                                            Contact @typedMember.FirstName
                                        </a>
                                    </div>
                                    <blockquote>
                                        @typedMember.Quote
                                    </blockquote>
                                    <ul class="social-links">
                                        @if (!string.IsNullOrEmpty(typedMember.Facebook))
                                        {
                                            <li>
                                                <a href="@typedMember.Facebook" target="_blank" class="facebook"><i class="ico"></i></a>
                                            </li>
                                        }
                                        @if (!string.IsNullOrEmpty(typedMember.Twitter))
                                        {
                                            <li>
                                                <a href="@typedMember.Twitter" target="_blank" class="twitter"><i class="ico"></i></a>
                                            </li>
                                        }
                                        @if (!string.IsNullOrEmpty(typedMember.GitHub))
                                        {
                                            <li>
                                                <a href="@typedMember.GitHub" target="_blank" class="git"><i class="ico"></i></a>
                                            </li>
                                        }
                                        @if (!string.IsNullOrEmpty(typedMember.LinkedIn))
                                        {
                                            <li>
                                                <a href="@typedMember.LinkedIn" target="_blank" class="linked"><i class="ico"></i></a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </section>
}


@if (Model.Testimonials != null && Model.Testimonials.Any())
{
    <section class="full-width testimonials-block">
        <div class="wrapper">
            <h2>@Model.TestimonialTitle</h2>
            <div class="flexslider">
                <ul class="slides">

                    @foreach (var testimonialId in Model.Testimonials)
                    {
                        var typedTestimonial = ContentHelper.GetByNodeId<TestimonialItem>(testimonialId);

                        <li>
                            <blockquote>
                                @typedTestimonial.TestimonialText
                            </blockquote>
                            <span class="author">@typedTestimonial.TestimonialAuthor</span>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </section>

}


@if (Model.PartnerNetwork != null && Model.PartnerNetwork.Any())
{
    <section class="full-width carousel-block">
        <div class="wrapper">
            <h2>@Model.PartnersTitle</h2>
            <div class="flexslider">
                <ul class="slides">

                    @foreach (var partnerId in Model.PartnerNetwork)
                    {
                        var typedPartner = ContentHelper.GetByNodeId<PartnerItem>(partnerId);

                        <li>
                            <a href="@(typedPartner.PartnerUrl != null ? typedPartner.PartnerUrl.Url : string.Empty)" target="@(typedPartner.PartnerUrl != null ? typedPartner.PartnerUrl.Target : string.Empty)">
                                <img src="@(typedPartner.PartnerImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedPartner.PartnerImage.Value)) : string.Empty)" />
                            </a>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </section>

}



@section additionalFooterSection
{
    <script type="text/javascript" src="/scripts/libs/swiper.jquery.min.js"></script>
    <script type="text/javascript" src="/scripts/pages/home.js"></script>
    <script type="text/javascript" src="/scripts/main/initSwiper.js"></script>

}
