@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using SmartCat.Business.Helpers;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Expertise>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}

<div class="page-title">
    <div class="wrapper">
        <h1>@Model.Name</h1>
    </div>
</div>

<div class="content">

    <div class="wrapper">
        <div class="main centered">
            <div class="rte-content">
                @Html.Raw(Model.RteContent)
            </div>

            @{
                var services = ContentHelper.GetChildren<ExpertiseItem>(Model.Id).ToList();
            }

            @if (services != null && services.Any())
            {
                <ul class="items-list has-hover">
                    @foreach (var service in services)
                    {
                        <li class="@(services.IndexOf(service) % 2 != 0 ? "right-aligned" : string.Empty)">
                            <div class="img-box">
                                <div class="romb blue-romb">
                                    <a href="@service.NiceUrl">
                                        @if (service.ServiceImage.HasValue)
                                        {
                                            <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(service.ServiceImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(service.ServiceImage.Value))" class="icon-img" />
                                        }
                                    </a>
                                </div>
                            </div>
                            <div class="text">
                                <h2><a href="@service.NiceUrl">@service.Name</a></h2>
                                <p>
                                    <a href="@service.NiceUrl">@Html.Raw(!string.IsNullOrEmpty(service.FeaturedText) ? service.FeaturedText : string.Empty)</a>
                                </p>
                                <a href="@service.NiceUrl" class="read-more-link">@Umbraco.GetDictionaryValue("Common.ReadMore")<i></i></a>
                            </div>
                        </li>
                    }
                </ul>
            }

        </div>

        @{
            var newsWidget = WidgetsHelper.NewsWidget;
            var teamWidget = WidgetsHelper.TeamWidget;
        }
        <aside class="sidebar">
            @if (newsWidget != null && newsWidget.Any())
            {
                <div class="widget slider">
                    <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(newsWidget.First()).ParentId).NiceUrl">@Umbraco.GetDictionaryValue("Service.WhatIsNew")</a></h3>
                    <div class="flexslider">
                        <ul class="slides">
                            @foreach (var newsId in newsWidget)
                            {
                                var newsPost = ContentHelper.GetByNodeId<NewsPost>(newsId);

                                <li>
                                    <div class="text-item">
                                        <div class="romb badge">
                                            <span class="reset-inner">N.</span>
                                        </div>
                                        <h4><a href="@newsPost.NiceUrl">@newsPost.Name</a></h4>
                                        <p>
                                            @Regex.Replace(newsPost.RteContent, @"<(.|\n)*?>", string.Empty).Substring(0, 160) ...
                                        </p>
                                        @if (newsPost.Author.HasValue)
                                        {
                                            var author = ContentHelper.GetByNodeId<TeamMember>(newsPost.Author.Value);
                                            <span class="author">@author.FirstName @author.LastName</span>
                                        }
                                        <span class="date">@newsPost.PostDate.ToString("MM/dd/yy")</span>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }

            @if (teamWidget != null && teamWidget.Any())
            {
                <div class="widget slider">
                    <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(teamWidget.First()).ParentId).NiceUrl">@Umbraco.GetDictionaryValue("Service.Challengers")</a></h3>
                    <div class="flexslider challengers">
                        <ul class="slides">

                            @foreach (var memberId in teamWidget)
                            {
                                var teamMember = ContentHelper.GetByNodeId<TeamMember>(memberId);

                                <li>
                                    <div class="inner">
                                        @if (teamMember.SidebarImage.HasValue)
                                        {
                                            <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(teamMember.SidebarImage.Value))" alt="" />
                                        }
                                        <div class="author-info">
                                            <h4>@teamMember.FirstName @teamMember.LastName</h4>
                                            <span>@teamMember.WorkPosition</span>
                                        </div>
                                    </div>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            }

        </aside>
    </div>

</div>
@section additionalFooterSection
{
    
}


