@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using SmartCat.Business.Helpers;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Technologies>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}

<div class="page-title">
    <div class="wrapper">
        <h1>@Model.Name</h1>
    </div>
</div>

<div class="content">

    <div class="wrapper">
        <div class="main">
            <div class="swiper-container">
                <ul class="one-half-list swiper-wrapper">

                    @{
                        var technologyItems = ContentHelper.GetChildren<TechnologyItem>(Model.Id).ToList();
                        var contactsPage = ContentHelper.GetChildren<Contact>(NodeHelper.Home.Id).FirstOrDefault();
                    }

                    @if (technologyItems != null && technologyItems.Any())
                    {
                        foreach (var technology in technologyItems)
                        {
                            var typedTeamMember = ContentHelper.GetByNodeId<TeamMember>(technology.MemberContact.Value);
                            var contactUrl = string.Format("{0}?{1}={2}", contactsPage.NiceUrl, SmartCat.Common.Constants.RequestParameters.ContactMemberId, typedTeamMember.Id);

                            <li class="swiper-slide">
                                <div class="box">
                                    <div class="img-wrap">
                                        @if (technology.TechnologyImage.HasValue)
                                        {
                                            <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(technology.TechnologyImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(technology.TechnologyImage.Value))" class="greyscale" />
                                        }

                                    </div>
                                    <div class="contact-box hidden-on-mobile">
                                        <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedTeamMember.TechnologyImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(typedTeamMember.TechnologyImage.Value))" />

                                        <span>@Umbraco.GetDictionaryValue("Common.HaveQuestions")?</span>
                                        <a href="@contactUrl">Contact @typedTeamMember.FirstName</a>
                                    </div>
                                </div>
                                <div class="text">
                                    <p>
                                        @technology.TechnologyDescription
                                    </p>
                                    <div class="contact-box">
                                        <span>@Umbraco.GetDictionaryValue("Common.HaveQuestions")?</span>
                                        <a href="@contactUrl">Contact @typedTeamMember.FirstName</a>
                                    </div>
                                </div>
                            </li>
                        }
                    }

                </ul>
                <div class="swiper-pagination show-on-mobile"></div>
            </div>
            <div class="certificate-block hidden-on-mobile">
                <span>@Umbraco.GetDictionaryValue("Service.Associations") / @Umbraco.GetDictionaryValue("Service.Certificates")</span>

                @{
                    var certificateContainer = ContentHelper.GetChildren<CertificateContainer>(Model.Id).FirstOrDefault();
                }

                @if (certificateContainer != null)
                {

                    var certificateItems = ContentHelper.GetChildren<CertificateItem>(certificateContainer.Id).ToList();

                    if (certificateItems != null && certificateItems.Any())
                    {
                        <ul>

                            @foreach (var certificate in certificateItems)
                            {
                                <li>
                                    <a href="@certificate.CertificateUrl.Url" target="@certificate.CertificateUrl.Target">
                                        @if (certificate.CertificateImage.HasValue)
                                        {
                                            <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(certificate.CertificateImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(certificate.CertificateImage.Value))" />
                                        }
                                    </a>
                                </li>
                            }

                        </ul>
                    }

                }

            </div>
        </div>
        @{ 
            var newsWidget = WidgetsHelper.NewsWidget;
            var teamWidget = WidgetsHelper.TeamWidget;
        }
        <aside class="sidebar">
            @if (newsWidget != null && newsWidget.Any())
            {
                <div class="widget slider">
                    <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(newsWidget.First()).ParentId).NiceUrl">@Umbraco.GetDictionaryValue("Technologies.WhatIsNew")</a></h3>
                    <div class="flexslider">
                        <ul class="slides">
                            @foreach (var newsId in newsWidget)
                            {
                                var newsPost = ContentHelper.GetByNodeId<NewsPost>(newsId);

                                <li>
                                    <div class="text-item">
                                        <div class="romb badge">
                                            <span class="reset-inner">N.</span>
                                        </div>
                                        <h4><a href="@newsPost.NiceUrl">@newsPost.Name</a></h4>
                                        <p>
                                            @Regex.Replace(newsPost.RteContent, @"<(.|\n)*?>", string.Empty).Substring(0, 160) ...
                                        </p>
                                        @if (newsPost.Author.HasValue)
                                        {
                                            var author = ContentHelper.GetByNodeId<TeamMember>(newsPost.Author.Value);
                                            <span class="author">@author.FirstName @author.LastName</span>
                                        }
                                        <span class="date">@newsPost.PostDate.ToString("MM/dd/yy")</span>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }

            @if (teamWidget != null && teamWidget.Any())
            {
                <div class="widget slider">
                    <h3><a href="@ContentHelper.GetByNodeId(ContentHelper.GetByNodeId(teamWidget.First()).ParentId).NiceUrl">@Umbraco.GetDictionaryValue("Technologies.Challengers")</a></h3>
                    <div class="flexslider challengers">
                        <ul class="slides">

                            @foreach (var memberId in teamWidget)
                            {
                                var teamMember = ContentHelper.GetByNodeId<TeamMember>(memberId);

                                <li>
                                    <div class="inner">
                                        <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(teamMember.SidebarImage.Value))" alt="" />
                                        <div class="author-info">
                                            <h4>@teamMember.FirstName @teamMember.LastName</h4>
                                            <span>@teamMember.WorkPosition</span>
                                        </div>
                                    </div>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            }

        </aside>
    </div>

</div>

@section additionalFooterSection
{

}
