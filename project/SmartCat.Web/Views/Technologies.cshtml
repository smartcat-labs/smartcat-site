@using Vega.USiteBuilder;
@using SmartCat.Entities.DocumentTypes;
@using SmartCat.Entities.DocumentTypes.Repository;
@using SmartCat.Business.Helpers;
@using System.Text.RegularExpressions;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Repository.Technologies>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}

<div class="page-title">
    <div class="wrapper">
        <h1>@Model.Name</h1>
    </div>
</div>

<div class="content">

    <div class="wrapper">
        <div class="main">
            @{
                var technologyCategories = ContentHelper.GetChildren<TechnologyContainer>(Model.Id).ToList();
                var contactsPage = ContentHelper.GetChildren<Contact>(NodeHelper.Home.Id).FirstOrDefault();

                if (technologyCategories != null && technologyCategories.Any())
                {
                    foreach (var techCategory in technologyCategories)
                    {
                        var technologyItems = ContentHelper.GetChildren<TechnologyItem>(techCategory.Id).ToList();
                        
                        <h4 class="category-title">@(techCategory.Name)</h4>

                
                        <ul class="one-half-list technologies">
                        @foreach (var technology in technologyItems)
                        {
                            var typedTeamMember = ContentHelper.GetByNodeId<TeamMember>(technology.MemberContact.Value);
                            var contactUrl = string.Format("{0}?{1}={2}", contactsPage.NiceUrl, SmartCat.Common.Constants.RequestParameters.ContactMemberId, typedTeamMember.Id);
                            
                            <li>
                                <div class="box">
                                    <div class="img-wrap">
                                        @if (technology.TechnologyImage.HasValue)
                                        {
                                            <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(technology.TechnologyImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(technology.TechnologyImage.Value))" class="greyscale" />
                                        }

                                    </div>
                                    <div class="contact-box hidden-on-mobile">
                                        <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedTeamMember.TechnologyImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(typedTeamMember.TechnologyImage.Value))" />

                                        <span>@Umbraco.GetDictionaryValue("Common.HaveQuestions")?</span>
                                        <a href="@contactUrl">Contact @typedTeamMember.FirstName</a>
                                    </div>
                                </div>
                                <div class="text">
                                    <p>
                                        @technology.TechnologyDescription
                                    </p>
                                    <div class="contact-box">
                                        <span>@Umbraco.GetDictionaryValue("Common.HaveQuestions")?</span>
                                        <a href="@contactUrl">Contact @typedTeamMember.FirstName</a>
                                    </div>
                                </div>
                            </li>
                        }
                        </ul>
                    }
                }
            }
            <div class="certificate-block hidden-on-mobile">
                <span>@Umbraco.GetDictionaryValue("Service.Associations") / @Umbraco.GetDictionaryValue("Service.Certificates")</span>

                @{
                    var certificateContainer = ContentHelper.GetChildren<CertificateContainer>(Model.Id).FirstOrDefault();
                }

                @if (certificateContainer != null)
                {

                    var certificateItems = ContentHelper.GetChildren<CertificateItem>(certificateContainer.Id).ToList();

                    if (certificateItems != null && certificateItems.Any())
                    {
                        <ul>

                            @foreach (var certificate in certificateItems)
                            {
                                <li>
                                    <a href="@certificate.CertificateUrl.Url" target="@certificate.CertificateUrl.Target">
                                        @if (certificate.CertificateImage.HasValue)
                                        {
                                            <img src="@MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(certificate.CertificateImage.Value))" alt="@MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(certificate.CertificateImage.Value))" />
                                        }
                                    </a>
                                </li>
                            }

                        </ul>
                    }

                }

            </div>
        </div>

        <aside class="sidebar">
            @{
                Html.RenderPartial("~/Views/Partials/_NewsWidget.cshtml", Umbraco);

                Html.RenderPartial("~/Views/Partials/_TeamWidget.cshtml", Umbraco);
            }
        </aside>
    </div>

</div>

@section additionalFooterSection
{

}
