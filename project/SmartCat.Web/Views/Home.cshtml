@using SmartCat.Common;
@using SmartCat.Business.Helpers;
@using SmartCat.Business.Twitter;
@using SmartCat.Entities.DocumentTypes;
@using SmartCat.Entities.DocumentTypes.Repository;
@using System.Text.RegularExpressions;
@using Vega.USiteBuilder;

@inherits Vega.USiteBuilder.UmbracoTemplatePageBase<SmartCat.Entities.DocumentTypes.Home>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;

    ViewBag.SeoDescription = Model.SeoDescription;
    ViewBag.SeoKeywords = Model.SeoKeywords;
    ViewBag.SeoAuthor = Model.SeoAuthor;
}

@section additionalHeaderSection
{

}


<section class="full-width home-banner">
    <div class="wrapper">
        <img src="@(Model.SliderImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(Model.SliderImage.Value)) : string.Empty)" class="main-img" />
        <img src="@(Model.AbstractImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(Model.AbstractImage.Value)) : string.Empty)" alt="" class="lines" />
        <div class="caption">
            <div class="inner">
                @if (!string.IsNullOrEmpty(Model.FeaturedText))
                {
                    @Html.Raw(Model.FeaturedText);
                }
                @if (Model.FeaturedButton != null)
                {
                    <a href="@Model.FeaturedButton.Url" class="btn arrow">
                        <span>@Model.FeaturedButton.Name</span>
                        <i class="ico"></i>
                    </a>
                }
            </div>
        </div>
    </div>
    <div class="bottom">
        <div class="left-box">
            <div class="triangle-box">
                <div class="triangle bottomleft" w="110" h="65"></div>
            </div>
        </div>
        <div class="right-box">
            <div class="triangle-box">
                <div class="triangle bottomright" w="100" h="65"></div>
            </div>
        </div>
        <div class="text-widget">
            <div class="wrapper">
                @{
                    var latestTweets = TwitterHandler.GetLatestTweets(1, 30);
                }

                @if (latestTweets != null && latestTweets.Any())
                {
                    var tweet = latestTweets.First();

                    <div class="twitter-box">
                        <h3>@Umbraco.GetDictionaryValue("Home.LatestTweet")</h3>
                        <p>
                            @Html.Raw(tweet.Text)
                        </p>
                        <span class="author">@TwitterHandler.GetTwitterUsername()</span>
                        <span class="date">@tweet.Date.ToString("MM/dd/yy")</span>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@if (Model.FeaturedExpertise != null && Model.FeaturedExpertise.Any())
{
    <section class="full-width what-we-do-block">
        <div class="wrapper centered">
            <h2><i class="ico title-ico hidden-on-mobile"></i>@Umbraco.GetDictionaryValue("Home.WhatWeDo")</h2>
            <div class="swiper-container">
                <div class="swiper-wrapper">

                    @foreach (var expertiseId in Model.FeaturedExpertise)
                    {
                        var typedExpertise = ContentHelper.GetByNodeId<ExpertiseItem>(expertiseId);

                        var index = Model.FeaturedExpertise.IndexOf(expertiseId);
                        <div class="one-fourth swiper-slide @(index % 2 != 0 ? "right-aligned" : string.Empty)" style="@(index == 4 ? "clear: both" : string.Empty)">
                            <div class="romb-wrap">
                                <div class="top romb">
                                    <div class="box-title">
                                        <h4 style="font-size:12px">@typedExpertise.Name</h4>
                                    </div>
                                    <div class="img-wrap">
                                        <a href="@typedExpertise.NiceUrl"><img src="@(typedExpertise.ServiceImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedExpertise.ServiceImage.Value)) : string.Empty)" alt="@(typedExpertise.ServiceImage.HasValue ? MediaHelper.GetImageAlternateText(MediaHelper.GetMediaById(typedExpertise.ServiceImage.Value)) : string.Empty)" class="icon-img" /></a>
                                    </div>
                                </div>
                            </div>
                            <div class="text">
                                <h2><a href="@typedExpertise.NiceUrl">@typedExpertise.Name</a></h2>
                                <p>
                                    @typedExpertise.FeaturedText
                                    <a href="@typedExpertise.NiceUrl" class="ico arrow-more hidden-on-mobile"></a>
                                </p>
                                <a href="@typedExpertise.NiceUrl" class="btn show-on-mobile">@Umbraco.GetDictionaryValue("Common.ReadMore")</a>
                            </div>
                        </div>
                    }

                </div>
                <div class="swiper-pagination show-on-mobile"></div>
            </div>
        </div>
    </section>
}

@*@if (!string.IsNullOrEmpty(Model.AboutText))
{
    <section class="full-width about-us-block">
        <div class="wrapper centered">
            <h2><i class="ico title-ico hidden-on-mobile"></i>@Umbraco.GetDictionaryValue("Home.AboutUs")</h2>
            <div class="rte-content">
                @Html.Raw(Model.AboutText)
            </div>
            @if (Model.LinkButton != null)
            {
                <a href="@Model.LinkButton.Url" class="btn arrow">
                    <span>@Model.LinkButton.Name</span>
                    <i class="ico"></i>
                </a>
            }
        </div>
    </section>
}*@

@if (Model.FeaturedProcesses != null && Model.FeaturedProcesses.Any())
{
    <section class="full-width process-block">
        <div class="wrapper centered">
            <h2><i class="ico title-ico hidden-on-mobile"></i>@Umbraco.GetDictionaryValue("Home.OurProcess")</h2>
            <div class="swiper-container">
                <ul class="swiper-wrapper">

                    @foreach (var processId in Model.FeaturedProcesses)
                    {
                        var typedProcess = ContentHelper.GetByNodeId<ProcessItem>(processId);
                        var parentUrl = ContentHelper.GetByNodeId(typedProcess.ParentId).NiceUrl;
                        var numbering = (Model.FeaturedProcesses.IndexOf(processId) + 1).ToString("D2");

                        <li class="swiper-slide">
                            <h3><a href="@parentUrl"><span>@numbering</span>@typedProcess.Name</a></h3>
                            <p>
                                <a href="@parentUrl">
                                    @if (typedProcess.ProcessDescription != null)
                                    {
                                        @Html.Raw(Utility.GetShorterText(typedProcess.ProcessDescription, 240, true, true));
                                    }
                                    <i class="ico arrow-more"></i>
                                </a>
                            </p>
                        </li>

                    }

                </ul>
                <div class="swiper-pagination show-on-mobile"></div>
            </div>
        </div>
    </section>
}

@{
    var blogContainer = ContentHelper.GetChildren<Blog>(Model.Id).FirstOrDefault();
    var blogs = ContentHelper.GetChildren<BlogPost>(blogContainer.Id, true).OrderByDescending(b => b.PostDate).Take(3);

    if (blogs != null && blogs.Any())
    {
        <section class="full-width news-block">
            <div class="wrapper">
                <h2>@Umbraco.GetDictionaryValue("Home.WhatIsNew")</h2>
                <a href="@blogContainer.NiceUrl" class="btn arrow">
                    <span>@Umbraco.GetDictionaryValue("Blog.AllBlogs")</span><i class="ico"></i>
                </a>
                <div class="one-three">

                    @foreach (var blog in blogs)
                    {
                        <div class="column">
                            <div class="item romb">
                                <div class="top ">
                                    <div class="box-title">
                                        <h4>@blog.PostDate.ToString("MM/dd/yy")</h4>
                                    </div>
                                    <a href="@blog.NiceUrl" class="img-container">
                                        <img src="@Umbraco.TypedContent(blog.Id).GetCropUrl(SmartCat.Common.Constants.Media.CropNames.BlogHeaderImageAlias, SmartCat.Common.Constants.Media.CropNames.Box)" alt="" class="reset-inner" />
                                        <span class="overlay"></span>
                                        <div class="badge-holder">
                                            <span class="reset-inner">B.</span>
                                        </div>
                                    </a>
                                </div>
                                <div class="text">
                                    <div class="inner reset-inner">
                                        <span class="date">@blog.PostDate.ToString("MM/dd/yy")</span>
                                        <h4><a href="@blog.NiceUrl">@blog.BlogTitle</a></h4>
                                        <p>
                                            @Utility.GetShorterText(Regex.Replace(blog.RteContent, @"<(.|\n)*?>", string.Empty), 140, true, true)
                                        </p>
                                        @if (blog.Author.HasValue)
                                        {
                                            var author = ContentHelper.GetByNodeId<TeamMember>(blog.Author.Value);
                                            <span>By @author.FirstName @author.LastName</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </section>
    }
}


@if (Model.Testimonials != null && Model.Testimonials.Any())
{
    <section class="full-width testimonials-block">
        <div class="wrapper">
            <h2>@Model.TestimonialTitle</h2>
            <div class="flexslider">
                <ul class="slides">

                    @foreach (var testimonialId in Model.Testimonials)
                    {
                        var typedTestimonial = ContentHelper.GetByNodeId<TestimonialItem>(testimonialId);

                        <li>
                            <blockquote>
                                @typedTestimonial.TestimonialText
                            </blockquote>
                            <span class="author">@typedTestimonial.TestimonialAuthor</span>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </section>

}


@if (Model.FeaturedTechnologies != null && Model.FeaturedTechnologies.Any())
{
    <section class="full-width carousel-block">
        <div class="wrapper ">
            <div class="flexslider">
                <ul class="slides">

                    @foreach (var techId in Model.FeaturedTechnologies)
                    {
                        var technology = ContentHelper.GetByNodeId<TechnologyItem>(techId);

                        <li>
                            <a href="@(technology.TechnologyLink != null ? technology.TechnologyLink.Url : string.Empty)" target="@(technology.TechnologyLink != null ? technology.TechnologyLink.Target : string.Empty)">
                                <img src="@(technology.TechnologyImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(technology.TechnologyImage.Value)) : string.Empty)" />
                            </a>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </section>
}


@*@if (Model.PartnerNetwork != null && Model.PartnerNetwork.Any())
{
    <section class="full-width carousel-block">
        <div class="wrapper">
            <h2>@Model.PartnersTitle</h2>
            <div class="flexslider">
                <ul class="slides">

                    @foreach (var partnerId in Model.PartnerNetwork)
                    {
                        var typedPartner = ContentHelper.GetByNodeId<PartnerItem>(partnerId);

                        <li>
                            <a href="@(typedPartner.PartnerUrl != null ? typedPartner.PartnerUrl.Url : string.Empty)" target="@(typedPartner.PartnerUrl != null ? typedPartner.PartnerUrl.Target : string.Empty)">
                                <img src="@(typedPartner.PartnerImage.HasValue ? MediaHelper.GetMediaUrl(MediaHelper.GetMediaById(typedPartner.PartnerImage.Value)) : string.Empty)" />
                            </a>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </section>

}*@



@section additionalFooterSection
{
    <script type="text/javascript" src="/scripts/libs/swiper.jquery.min.js"></script>
    <script type="text/javascript" src="/scripts/pages/home.js"></script>
    <script type="text/javascript" src="/scripts/main/initSwiper.js"></script>

}
